Delphi est à la fois un langage de programmation orienté objet et un environnement de développement intégré (EDI) pour ce langage.
L'EDI Delphi est un EDI propriétaire fonctionnant sous Windows créé en 1995 par Borland. À l'époque, créer des programmes graphiques sous Windows se faisait en grande majorité en utilisant soit la chaîne de compilation Visual C++, soit le RAD Visual Basic. Le premier outil étant excessivement complexe et le second assez peu structuré, Delphi apparut alors comme une alternative viable pour beaucoup de développeurs qui souhaitaient créer des programmes pour Windows.
En 2001, Borland édita une version Linux de Delphi appelée Kylix, qui ne connut pas le succès attendu par l'éditeur.

Le Pascal Objet
Delphi implémente une version orientée objet du langage Pascal : le Pascal Objet, renommé Langage de programmation Delphi au fil des modifications apportées par Borland. Le Pascal Objet de Delphi possède plusieurs avantages qui améliorent la productivité du développeur par rapport au C++ : typage fort, contrôle strict du compilateur pour éviter les erreurs de mémoire, de débordement, gestion intégrée des chaînes de caractères et des tableaux dynamiques, etc. La compilation ne se fait qu'en une seule passe et il n'y a pas de séparation entre l'implémentation et l'interface comme en C ou en C++ : la génération d'un projet Delphi est donc très rapide, ce qui a accru à sa sortie la popularité de l'outil vite réputé pour ses temps de compilation record.
Bien que le Pascal Objet introduise une multitude de concepts intéressants et novateurs (de nombreux ont été repris avec C), il souffre de faiblesses connues. Par exemple, il ne permet pas certaines fonctionnalités de POO telles que l'héritage multiple de classes ou l'utilisation d'interfaces non liées à COM. Certaines fonctionnalités comme la surcharge d'opérateurs et la généricité n'ont été introduits que tard (respectivement avec Delphi 2005 et Delphi 2009). De plus, sa parenté avec le Pascal rebute de nombreux programmeurs plus habitués à des styles de programmation proches de Java ou C. Enfin, il n'est ni standardisé ni géré par un comité indépendant : propriété d'Embarcadero, l'éditeur est le seul à pouvoir décider de l'avenir et de l'ajout de nouvelles fonctionnalités au langage.

L'interface de développement
L'environnement de développement s'appuie sur un éditeur d'interface graphique associé à un éditeur de code source. Il doit son succès à sa facilité d'utilisation pour développer des applications graphiques et-ou liées aux bases de données. On l'a souvent comparé à Visual Basic de Microsoft pour cette facilité de développement. On peut même dire que par un amusant mouvement de balancier et de personne, le VB influença Delphi qui à son tour influença par la suite le VB (Anders Hejlsberg lors de son passage chez Microsoft).
L'environnement de développement auto-génère du code pour faciliter le travail du programmeur. Il maintient une correspondance automatique entre la vue de conception (la fenêtre que le programmeur bâtit en déposant des composants graphiques) et l'éditeur de code (la vue affichant le code source qui créera ces composants à l'exécution). Les données spécifiques aux composants sont stockées dans des fichiers d'extension.DFM alors que le code source en Pascal Objet est sauvegardé dans des fichiers d'extension.PAS. Alors que d'autres langages (comme C avec Winforms) génèrent les instructions nécessaires à la création des composants de l'interface et l'injectent dans une section du code source du programme, Delphi sépare les données statiques de description des objets d'interface, à la manière de XAML, et se base sur des routines de la VCL pour relire et présenter l'interface lors de l'exécution.
L'interface de développement permet l'ajout de composants tiers (graphiques ou non) via un système de composants. La modularité est obtenue à la conception mais peut aussi être exploitée à l'exécution via un système de chargement dynamique de paquets d'exécution, Borland ayant étendu le concept de bibliothèques partagées et le format Windows DLL en introduisant un modèle propriétaire permettant d'enregistrer dynamiquement et d'exporter des classes entre modules. Le même système sera repris par Microsoft sous Visual Basic avec le format VBX, puis à l'échelle du système avec les composants COM et ActiveX.

Exemple de code engendré
Le code suivant montre ce que Delphi génère lors de la création d'une application vide. La fenêtre à l'écran est représentée par une classe (TForm1) qui sera instanciée à l'exécution et dont l'instance sera assignée à la variable Form1. Les autres composants sont aussi définis sous forme de classes dont le code source est stocké dans les fichiers décrits dans la clause uses de l'unité :
unit Unit1;

interface

uses Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms, Dialogs;

type
 TForm1 - class(TForm)
 private
 (Déclarations privées)
 public
 (Déclarations publiques)
end;

var
 Form1: TForm1;

implementation

(R -.dfm)

end
Cependant, c'est à peu près tout ce que Delphi engendre (mis à part le code des éléments placés par le biais de l'EDI). Si un programmeur averti veut engendrer des classes de manière efficace pour mieux concevoir et structurer ses données, Borland propose d'autres outils basés sur UML : ModelMaker de ModelMakerTools qui, lui, permet d'engendrer tout le code d'interface d'une classe ainsi que d'appliquer facilement des design patterns, ou bien Together, produit Borland résultant du rachat de TogetherSoft.

Autres branches issues ou en rapport avec Delphi
Kylix est un produit très proche de Delphi (même principe, même interface) qui fonctionne sous Linux et qui permet de créer des programmes pour ce système. Le même code source peut-être compilé sous Linux et Windows (respectivement avec Kylix et Delphi) grâce à l'utilisation de la bibliothèque objet CLX qui s'appuie sur la bibliothèque graphique Qt en suivant les mêmes principe que la bibliothèque VCL. Aujourd'hui Borland a abandonné le développement de Kylix mais la bibliothèque CLX reste présente au sein des nouvelles versions de Delphi.
Lazarus est un projet libre d'EDI pour Free Pascal. Copiant au widget près et aux fonctions près l'outil Delphi (et s'utilisant comme celui-ci), le logiciel, associé à Free Pascal, permet de concevoir des projets sensiblement compatibles avec Delphi. À l'aide de quelques directives de compilation, un même code orienté traitement (n'utilisant pas directement des fonctions d'interface graphique) peut être compilé sous Delphi, Kylix et Free-Pascal. L'inconvénient de ce logiciel est lié à son caractère récent : une légère instabilité (largement compensée par sa fonction de sauvegarde automatique) et un manque de widgets. Le TFrame, composant le plus utilisé et amélioration majeure de Delphi, fonctionne désormais correctement. Enfin, la documentation officielle n'est pas aussi complète qu'avec le Delphi de Borland mais de très nombreux sites existent palliant ce défaut.

Bibliothèque de composants VCL
Delphi bénéficie d'une excellente bibliothèque de composants visuels et non visuels, la Visual Component Library (VCL), dont le concept est similaire aux MFC de Visual Studio. La VCL permet entre autres de dessiner rapidement une application graphique, en masquant les appels aux complexes API Windows. Depuis Delphi 1, la VCL est améliorée par Borland à chaque nouvelle version de Delphi en veillant à une compatibilité quasi totale dans l'interface de la bibliothèque, ce qui permet de migrer des projets en limitant la réécriture du code.
C++Builder exploite la même bibliothèque de composants et comporte un "traducteur" de Pascal Objet vers C++, tout du moins un C++ contenant des extensions propres à Borland compréhensible par le frère C++ de Delphi. Ainsi, tout code Delphi peut être exploité avec C++Builder.

Historique: 1995 : Delphi 1 est édité par Borland. Cette première version était destinée aux versions 16 bits de Windows (Windows 3, 3.1, etc.).
Dès la deuxième version, la cible était les Windows 32 bits (Windows 95, NT, etc.). Le logiciel ne change pas radicalement entre chaque version, la différence se fait plus sur des ajouts de composants utilisables dans les programmes et la prise en compte de nouvelles technologies. À la fin des années 1990, Microsoft débauche une grande partie de l'équipe initiale ayant conçu Delphi, dont Anders Hejlsberg (le créateur de Turbo Pascal). Anders Hejlsberg travaillera d'abord sur la bibliothèque de classes du langage Visual J++, puis sur le projet.NET et sera l'inventeur du C. Le départ de nombreux membres coïncide avec une baisse générale de la qualité du produit ainsi qu'un manque d'investissement marketing de la part de Borland, menant à un déclin progressif de Delphi. Néanmoins, au début des années 2000, Borland reste un des seuls éditeurs permettant (sur le papier) de développer à partir d'un même ensemble d'outils des applications natives, des applications.NET ainsi que des applications fonctionnant sous Linux grâce à Kylix.; 2001 : première édition de Kylix, l'environnement Delphi pour Linux.; 2002 : Kylix 3. Le succès n'étant pas au rendez-vous de ce Delphi pour Linux, ce sera sa dernière version.; 2006 (février) : Borland annonce son intention de se séparer du développement de ses EDI pour se consacrer à la Gestion du Cycle de Vie des applications.
Ne trouvant pas de repreneur, Borland crée en 2006 CodeGear (en), une entité dédiée aux EDI, à laquelle participe toute l'équipe de développement de Delphi, C++Builder, et JBuilder. Au départ, CodeGear appartient à Borland mais possède ses moyens propres destinés à la création d'outils pour développeurs ("Where developers matter).
Après deux ans de recherche, la société Embarcadero Technologies (en) rachète CodeGear pour un montant de 23 millions de dollars. Dans un souci d'homogénéité, les bases de données issues d'Embarcadero sont regroupées sous la dénomination DataBaseGear. CodeGear continue à opérer en tant qu'entreprise privée sous la direction de l'actuelle CEO d'Embarcadero. Borland, ou ce qu'il en restait, sera racheté par Micro Focus International en 2009 pour 75 millions de dollars. 2008 : pour des questions de moyens, le compilateur Delphi.NET est abandonné au profit de Delphi Prism, une solution proposée par un éditeur tiers, RemObjects.; 2009 (août) : Delphi 2010 consolide le support d'Unicode dans la VCL, propose le support de Windows 7, intègre de nombreuses corrections de bogues et améliore la productivité dans l'environnement de développement.
Langage : support de la généricité. Cela permet de réduire de façon significative les lignes de codes à saisir par le développeur. Support des méthodes anonymes, permettant, entre autres, de faire du refactoring plus abouti.
De nouveaux composants visuels ont été introduits dont le plus notable est une implémentation de l'interface utilisateur Ribbon utilisée par Microsoft à partir de Microsoft Office 2007 et Windows 7. 2010 : Delphi XE La compilation multiplateforme étant repoussé à l'année suivante, les évolutions sont moins nombreuses qu'attendu. On peut noter toutefois l'intégration de l'outil de contrôle de source SVN et du logiciel de Profilage de code AQTime au sein de l'IDE.; 2011 : Delphi XE2 La compilation multiplateforme est introduite pour Mac OS X et iOS ainsi que pour Windows x64. Une bibliothèque d'interface graphique, FireMonkey, est rajoutée en plus de la VCL qui était trop orientée Windows. Cette version est considérée par beaucoup d'observateurs comme la première version majeure depuis plus de dix ans.; 2012 : Delphi XE3 ajoute la plateforme Windows 8, Firemonkey 2 et prépare une nouvelle mouture IOS et Android.; 2013 : Delphi XE4 ajoute des fonctionnalités à Delphi XE3 permettant essentiellement la création d'applications pour IOS native.; 2013 : Delphi XE5 complète la volonté d'un outil de développement multiplateforme avec la création d'applications sous Android.; 2014 : Delphi XE6 ajoute des fonctionnalités à Delphi XE5.; 2014 : Delphi XE7 résout des bugs notamment sur iOS.; 2015 : Delphi XE8; 2015 : Delphi 10 Seattle.
Embarcadero est racheté en octobre 2015 par Idera, une entreprise spécialisée dans les bases de données. 2016 : Delphi 10.1 Berlin; 2017 : Delphi 10.2 Tokyo ajoute le compilateur pour Linux.
Les versions "starter" de Delphi et C++Builder sont à présent gratuites.

Exemples de projets réalisés en Delphi: Delphi lui-même et les autres outils Borland comme C++Builder; AIMP, un lecteur multimédia; Altium Designer, un logiciel de conception assistée par ordinateur pour systèmes électronique (15 000 000 lignes de code); InnoSetup, un logiciel pour créer des installateurs pour Windows; FL Studio (anciennement Fruity Loops), un séquenceur - éditeur audio; Total Commander, un gestionnaire de fichier avancé; ConTEXT, un éditeur de texte orienté développement; Dev-C++, un environnement de développement intégré sous Windows; Perl IDE, un environnement de développement intégré pour Perl sous Windows; Ad-Aware, un programme qui supprime les logiciels espions; Soldat, un jeu vidéo d'action gratuit sous Windows; Sensomusic Usine, un logiciel temps réel pour la scène musicale; DreamMail, un client de messagerie; BudgetExpress, un logiciel de finances personnelles; Beyond Compare, un outil de comparaison de fichiers; Cartopro, un logiciel permettant de transférer des données dans un GPS sur la base de cartes numérisées; PL-SQL Developer, un outil de développement PL-SQL; Toad, un outil d'administration et de développement de base de données par Quest Software; Game Maker, un logiciel de création de jeux vidéo; Kaspersky Anti-Virus; L'interface sous Windows de Skype, un logiciel de téléphonie par IP; SIPInside, un softphone sous License GPL; Omnichat, un logiciel de messagerie instantanée sans serveur, pour réseau local; Logicom, un logiciel de gestion commerciale et industrielle; APEL, un logiciel de gestion bâtiment et promoteur; Pleiades+COMFIE, un logiciel de simulation thermique dynamique du bâtiment; Solsuite, un logiciel commercial de jeu de solitaire sous Windows; Tarot Expert, un jeu de tarot sous Windows; Geoplan, un logiciel de géométrie dynamique éducatif; Tanagra, un logiciel de statistique.

Voir aussi

Articles connexes: Langages : Pascal et Pascal Objet; Framework : VCL, VCL.NET et CLX; Autres : Kylix, Borland, Lazarus; MIDletPascal.