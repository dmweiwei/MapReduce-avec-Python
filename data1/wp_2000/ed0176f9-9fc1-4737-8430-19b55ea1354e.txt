Christopher Strachey (né le 16 novembre 1916, décédé le 18 mai 1975) est un informaticien britannique. Il est surtout connu comme l'un des premiers à avoir prôné une approche mathématique dans l'étude des programmes.

Biographie
Il est le fils du cryptographe Oliver Strachey et de l'écrivaine Ray Strachey. Il a fait ses études à la Gresham's School et à l'Université de Cambridge.
En 1951, il se joint le laboratoire informatique où travaille Alan Turing sur l'un des tout premiers ordinateurs conçus et mis en service au Royaume-Uni. Les compétences de Strachey sont si élevées que Turing lui remet de facto la supervision des programmes de recherche informatique.
Pour démontrer l'approche mathématique de la programmation, Strachey a introduit l'idée de sémantique dénotationnelle (d'abord appelée mathématique) dont l'objectif est de fournir des méthodes permettant de démontrer des propriétés des programmes. Il souhaitait par là atteindre la même rigueur que dans les démonstrations mathématiques usuelles, si ce n'est plus. L'une des principales caractéristiques de la sémantique dénotationnelle est donc qu'elle est définie par récurrence (induction en anglais) sur la structure des programmes.
Strachey remet d'abord les considérations de syntaxe à leur juste place, appelant que les considérations syntaxiques ne devaient pas prendre le pas sur la sémantique dans l'étude des langages de programmation. Il a notamment écrit : "Je considère les problèmes syntaxiques comme essentiellement non pertinents pour les langages de programmation... En gros il me semble correct de penser que la sémantique est là pour ce que nous voulons dire et la syntaxe pour comment nous avons à le dire."
Ailleurs, cité par Dana S. Scott, il écrit : "Les problèmes de syntaxe sont beaucoup plus faciles que ceux de sémantique. Cela a comme conséquence naturelle, mais malheureuse, qu'une grande attention a été donnée aux questions syntaxiques... Rien ne pourrait être plus loin de la vérité que ce que l'incompréhension répandue et permanente de concepts aussi fondamentaux que ceux de noms et de valeurs illustre avec acuité."
À l'époque, la recherche se focalisait en effet plutôt sur la recherche d'une théorie des langages et son application à la construction des compilateurs ; celle-ci conduisit d'ailleurs à une identification de plus en plus claire des concepts fondamentaux qui aboutit à des outils de méta-compilation comme Lex et Yacc.
Il mettait ainsi en évidence que les deux concepts à la base des outils de traduction des langages (interprètes et compilateurs) sont: d'une part la syntaxe (facile) pour laquelle il faut des outils puissants,; mais d'autre part aussi une sémantique (plus difficile, car n'offrant pas d'outils formels) qu'il faut maîtriser. En France, des chercheurs comme Claude Pair et Jacques Arsac s'intéressèrent rapidement au sujet.
C'est grâce à Strachey que la sémantique commença à être vue comme une question autonome et non comme simple appendice de la syntaxe (cette dernière vision était favorisée par le fait que la reconnaissance syntaxique des constantes s'accompagnait en sous-produit de leur traduction d'une part, par l'influence dominante des idées de Noam Chomsky d'autre part).
Selon Strachey, la pratique de la programmation ne devait jamais être déconnectée de l'étude des concepts fondamentaux et vice et versa. C'est donc dans la même foulée qu'il a développé des travaux sur la sémantique et la programmation d'un petit système d'exploitation O6 6 (en 1972) en utilisant un langage de programmation universel (pour son temps) appelé CPL puis BCPL, dont se sont inspirés Ken Thompson pour créer B et Dennis Ritchie pour le langage C.
Visionnaire, Christopher Strachey posa dès 1959 les jalons et les principes du temps partagé dans un article fondateur "Time Sharing in Large Fast Computers" ("Le temps partagé dans les grands ordinateurs rapides"). Il écrivit également dans Scientific American et y fut cité dans les années 1970 en tant qu'inspirateur lointain du langage Smalltalk. Il est enfin l'auteur d'un programme "historique" de composition assistée de lettres d'amour sur le Mark 1.
Enfin, c'est lui qui proposa pour la première fois en 1967 de distinguer entre eux le polymorphisme où l'on devait expliciter les formes des arguments possibles (ce sera celui de PL-I et d'Algol 68) qu'il nomme polymorphisme ad hoc, et un autre où cette extension serait automatique, qui sera rattachée ensuite par John C. Reynolds et Jean-Yves Girard au lambda-calcul et qui est celle des langages modernes.
Le langage de macro m4 s'inspire des travaux de Christopher Strachey.