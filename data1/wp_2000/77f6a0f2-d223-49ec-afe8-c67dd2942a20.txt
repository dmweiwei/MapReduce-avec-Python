Un logiciel propriétaire, logiciel non libre ou parfois logiciel privatif voire logiciel privateur, désigne un logiciel qui ne permet pas légalement ou techniquement, ou par quelque autre moyen que ce soit, d'exercer simultanément les quatre libertés logicielles que sont l'exécution du logiciel pour tout type d'utilisation, l'étude de son code source (et donc l'accès à ce code source), la distribution de copies, ainsi que la modification et donc l'amélioration du code source.
Les limitations légales, permises par le droit d'auteur, qui s'appliquent aux logiciels, sont choisies par les ayants droit et sont souvent encadrées par un contrat de licence utilisateur final (CLUF), nommé alors licence propriétaire. Elles ont souvent, mais pas toujours, pour objectif de permettre le contrôle de la diffusion du logiciel afin de permettre la vente de licences de logiciels.
Un logiciel étant un objet purement numérique, sa copie est souvent aussi simple que la copie de tout autre fichier informatique. Les diffuseurs de logiciels propriétaires ont par conséquent parfois recours à des systèmes de "gestion des droits numériques". Les droits des utilisateurs de logiciels propriétaires sont souvent limités à son exécution pour des usages donnés.
Dans un logiciel propriétaire, il est rarement possible à un simple utilisateur du logiciel de modifier le logiciel, à la fois pour des raisons légales, la licence ne lui permettant pas de modifier le logiciel et de redistribuer les modifications, mais aussi des raisons d'origine technique, liées à l'absence de diffusion du code source ou d'offuscation du code source. Ces techniques permettent à l'éditeur de garder contrôle sur le code des logiciels qu'il diffuse. Le logiciel Windows est par exemple propriétaire.
Le logiciel propriétaire se définit de manière différente par opposition aux logiciels libres et open source. Ces mouvements considèrent que l'éditeur n'a pas à garder le code source secret, et que le divulguer et autoriser sa diffusion permettent de mutualiser les efforts sur le logiciel, et ainsi d'améliorer sa qualité et ses fonctionnalités pour le mouvement open source, ou pour des raisons éthique pour la sensibilité logiciel libre de ce mouvement, pour lequel il ne devrait pas exister de barrière à l'utilisation du logiciel, à sa modification ou à sa diffusion.
Certains éditeurs de logiciels propriétaires utilisent ce terme en référence au droit de la propriété intellectuelle, qui est apparu en 1967.
Lorsque de tels logiciels sont commercialisés, le modèle d'activité des entreprises éditrices repose le plus souvent sur la vente de droits d'utilisation. Ces derniers sont contractualisés sous la forme d'un CLUF qui : - stipule les droits que l'acquéreur obtient sur le logiciel ; - explicite souvent les droits que le propriétaire accorde, où les restrictions qu'il impose, suivant le point de vue.
Bien que l'expression "acheter un logiciel" soit courante pour désigner ce type de transaction, elles concernent un droit d'utilisation limité au cadre établi par la licence ; le transfert de propriété n'existant qu'en cas de vente du droit d'auteur ou copyright associé. Un logiciel propriétaire n'est pas nécessairement payant ; les logiciels gratuits mais non-libres sont appelés freeware ou gratuiciel.

Histoire des terminologies
On retrouve cette terminologie en anglais dans un discours du 30 octobre 1986 dans des propos tenus par Richard Stallman en Suède.
Schéma de classification des CLUF.
Le terme "propriétaire" est utilisé dans les communautés francophones du libre pour traduire le terme anglais "proprietary software".
Cette dernière affirmation est fortement contestée par les développeurs français de logiciels libres, qui affirment que l'expression correcte est bien le terme privateur, qui signifie "privateur de libertés", ce qui en effet marque l'opposition par rapport aux logiciels libres. L'APRIL explique ainsi le choix de ce terme : "Le terme de "logiciel privateur" ou "programme privateur" peut être préféré à celui de "logiciel propriétaire" parce que ces programmes privent les utilisateurs de leurs libertés. Ils maintiennent les utilisateurs dans un état de division et d'impuissance".
Par ailleurs, l'utilisateur est bien pleinement propriétaire de son logiciel libre, ce qui manifeste très clairement la profonde distinction du sens entre privateur et propriétaire. L'autre exemple étant un logiciel libre, donc non-privateur, qui pour autant n'est pas la propriété de son utilisateur quand il s'agit d'un logiciel placé à distance de lui dans un cloud, qui est alors propriété du prestataire de service. Les deux notions sont parfaitement indépendantes. Enfin les deux notions ne se réfèrent pas au même objet : privateur ou son opposé libre sont des propriétés du logiciel même, tandis que propriétaire renvoie à l'individu ou au groupement d'individus ayant droit de propriété sur le logiciel.
Il s'agit donc de désigner les logiciels "non-libres", autrement dit des logiciels qui ne correspondent pas au cadre défini pour le logiciel libre (liberté d'utiliser, de diffuser, d'étudier, et de modifier). La notion renvoie généralement aux limites établies par le contrat de licence d'utilisateur final ou un autre type de contrat lorsqu'ils demandent de consentir à des restrictions en contradictions avec ces critères. Cela ne s'applique pas lorsque les licences sont établies pour respecter ces critères, on parle alors de licences libres.
Soucieux de ne pas propager la faute de traduction constituée par la francisation hâtive de "proprietary" en son faux-ami "propriétaire", certains éditeurs commercialisant de telles licences dans le monde francophone emploient souvent le terme approprié de "logiciel commercial". Les partisans indéfectibles du faux-ami "propriétaire" rétorquent que le qualificatif "commercial" ne recoupe cependant pas la même distinction car un logiciel libre peut être commercialisé et un logiciel non-commercialisé peut être détenu en propre par une marque.
Le terme "privateur", plus récent, est de plus en plus utilisé par les personnes voulant insister sur la privation de libertés à laquelle l'utilisateur est soumis. Il est ainsi principalement utilisé par les personnes particulièrement attachées aux valeurs morales d'équité que sous-tend le mouvement du logiciel libre, comme Richard Stallman. Il faut cependant noter que la privation n'est pas due au logiciel mais au droit d'auteur et au copyright qui confèrent un monopole d'utilisation aux titulaires des privilèges.
Le terme "propre", c'est-à-dire appartenant en propre à un tiers, proposé en 2008 par des linguistes français de la Sorbonne soucieux de clarifier le faux sens véhiculé par l'emploi abusif du qualificatif "propriétaire", présente le mérite d'être le seul qualificatif exact employant le même radical que "propriétaire". Toutefois, cette proposition n'a pas rencontré d'écho dans le monde de l'informatique.
À ce jour, en dépit des mises en garde et contre-propositions précitées, l'adjectivation du substantif "propriétaire" par analogie avec l'anglais "proprietary" reste la plus répandue parmi les informaticiens comme antonyme de la notion de "logiciel libre".

Logiciel et droit d'auteur
Les conditions d'utilisation d'un logiciel relèvent du droit d'auteur parce que le logiciel est une création de l'esprit, même si de nombreuses lois du droit d'auteur traitent le logiciel comme un cas particulier.
En conséquence, un utilisateur ne peut utiliser un logiciel que dans le respect du droit de l'auteur du logiciel. Dans la plupart des cas, l'auteur du logiciel obtient des droits du logiciel. Lorsque les auteurs sont salariés, les droits sont directement dévolus à l'entreprise par la loi (l'employeur n'a pas besoin de se les faire céder).
Les logiciels propriétaires et la plupart des logiciels libres sont couverts par le droit d'auteur. Seuls les logiciels dans le domaine public sortent de ce cadre, tout du moins pour ce qui concerne les droits patrimoniaux.
La notion de logiciel propriétaire connaît également ses critiques. Ainsi dans une publication de recherche sur les logiciels libres, on peut par exemple lire "la notion de "logiciel propriétaire" (...) porte selon nous à confusion car le logiciel libre a aussi un ou des propriétaire(s). C'est la licence qui donne au logiciel son statut libre ou non libre et non pas le fait qu'il soit détenu par un propriétaire.". En effet en droit l'auteur qui licencie un logiciel sous une licence libre n'abandonne pas ses droits sur le logiciel, il les accorde aux utilisateurs lors de la distribution du logiciel, comme pour un logiciel dit propriétaire.

Définitions
Le terme "propriétaire" fait référence au fait que l'auteur garde le contrôle sur les droits de propriété et d'usage du logiciel.

Selon le principe de propriété du logiciel
Tous termes relatifs à des notions de vente ou d'achat d'un logiciel dit "propriétaire" signifient "cession de droits d'utilisation du logiciel" et ne signifient pas "transfert de propriété du logiciel". En conséquence, le logiciel qualifié de "propriétaire" par abus de langage, et mis à la disposition d'un utilisateur, reste la propriété de son auteur, personne physique ou personne morale (entreprise) ; et l'auteur conserve les droits accordés par le droit d'auteur, notamment le monopole de la copie.
L'auteur confie son logiciel à l'utilisateur pour que celui-ci en fasse un usage défini, notamment par l'utilisateur de renoncer à étudier le fonctionnement du logiciel (rétro-ingénierie). Le renoncement à ce droit nécessite un accord explicite ; c'est pour cela que l'on parle d'un "contrat de licence" plutôt que d'une simple licence.
Pour accéder au droit d'utiliser un logiciel propriétaire, l'utilisateur doit généralement accepter un contrat dans lequel il s'interdit de copier tout ou une partie du logiciel et également de le transcrire dans un autre langage.
Par exception à ce régime général, certaines lois nationales autorisent la rétro-ingénierie et la création d'une copie de sauvegarde (backup).

Par comparaison au logiciel libre
Par opposition au logiciel libre, un logiciel propriétaire ne garantit pas l'ensemble des quatre libertés du logiciel libre. L'auteur d'un logiciel propriétaire peut interdire ou limiter à l'utilisateur, le fait : - d'utiliser le logiciel pour d'autres usages que ceux prévus dans le contrat ; - d'étudier le code source ; - de modifier le logiciel ; - de copier et de redistribuer des copies du logiciel.
En règle générale, l'accès au code source d'un logiciel dit propriétaire est impossible. La seule mise à disposition de ce code ne suffit pas à rendre libre un logiciel propriétaire, à l'exception notable de certains logiciels dits shared source.

Contrat de licence
Le contrat de licence est le contrat qui lie l'auteur à l'utilisateur. Pour un logiciel dit "propriétaire", ce contrat de licence définit les conditions d'usage du logiciel que l'auteur autorise.
Un contrat de licence de logiciel dit "propriétaire" limite le droit d'usage, par exemple en interdisant l'utilisation à distance ou celle par plusieurs utilisateurs simultanément.

Historique

Contexte
L'informatique, telle qu'on définit aujourd'hui, est apparue vers le milieu du XXe siècle. À cette époque, l'informatique était une technologie qui était exclusivement issue du domaine commercial : Les fabricants de matériels et des logiciels associés vendaient ou louaient ceux-ci et louaient également la main d'oeuvre nécessaire à leur utilisation. Le modèle était donc totalement propriétaire et fermé.
Par la suite, dans les années 1970 et années 1980, la miniaturisation est devenue suffisante pour que l'informatique entre dans le domaine universitaire. C'est alors que l'échange de programmes et de codes sources, au nom de la recherche scientifique, débuta dans le domaine de l'informatique. La miniaturisation se poursuivant, cette pratique courante et isolée devint de plus en plus répandue au sein de la population. Au point que des rappels à l'ordre sont faits, notamment par Bill Gates qui publie en 1976 une lettre ouverte (An Open Letter to Hobbyists) où il demande aux passionnés - qui commencent à utiliser des systèmes informatiques à titre personnel - d'arrêter d'utiliser les logiciels sans payer de droits, les accusant de voler le logiciel.
Il n'est pas encore question de logiciel libre, mais rapidement par la suite, l'expérience de l'échange sans restriction des connaissances sur les logiciels par les informaticiens de l'époque, se trouve modifiée par cette popularisation. Le concept de logiciel libre(ment échangeable) est formalisé dans les années 1980 par Richard Stallman, puis traduite en termes juridiques avec la Licence publique générale GNU (GPL), mise en application avec le projet GNU, et défendu par la Free Software Foundation (FSF). La GPL donne à tous, le droit de copier, étudier, modifier et redistribuer les versions modifiées du logiciel qu'ils ont reçues.

Études sur le sujet

Le milieu hacker et la philosophie du logiciel libre
Dans un texte publié fin 2009, Daniel Murphy confirme que le Libre était la norme du milieu Hacker, un concept formalisé plus tard par Richard Stallman. Les philosophies hacker et du logiciel libre apparaissaient comme deux facettes du même objet. Mais le vide juridique entourant cet objet favorisa l'émergence du logiciel privateur dans le sens moderne du terme. La notion moderne de logiciel libre a permis de résoudre l'anomalie que représente le logiciel propriétaire pour la communauté hacker.

Thèse sur l'invention du logiciel propriétaire
D'après une récente recherche, la distinction entre ce qui sera ensuite nommé logiciel "libre" et logiciel "fermé" est historiquement datée. Celle-ci est notamment due à deux phénomènes : d'une part à la scission entre économie du matériel et économie du logiciel, d'autre part à des mutations technologiques majeures. En ce qui concerne la séparation entre économies du matériel et du logiciel, il convient de souligner qu'au début de l'informatique, matériel (hardware) et logiciel (software) étaient commercialisés ensemble. D'après Benkeltoum, "les fabricants n'avaient aucun intérêt à vendre composants et logiciels séparément puisqu'ils n'étaient pas utilisables individuellement du fait de l'hétérogénéité des systèmes et de la non-compatibilité des instructions écrites entre ces derniers". Du point de vue technologique, la création du premier compilateur par Grace Hopper en 1951 eut un rôle particulièrement décisif. Comme le souligne cette recherche : "c'est seulement à partir du moment où les concepteurs de logiciels eurent la possibilité de convertir les instructions lisibles par l'homme ("code source") en instruction machine ("code objet") par le biais du compilateur, que ces derniers eurent la possibilité de cacher la source de leur travail à leurs clients et plus largement à tous les utilisateurs.".
Le second changement correspond à l'apparition de standards de fait comme le Personal Computer d'IBM qui conduisit à l'émergence de besoins types en matière de fonctionnalités. En guise de conclusion, cette recherche soutient qu'en réalité "ce qui fut inventé, ce n'est pas le logiciel libre, c'est plutôt le logiciel fermé puisqu'au commencement de l'informatique, les logiciels étaient libres.".

Caractéristiques du logiciel propriétaire

Pour l'auteur
L'auteur d'un logiciel dit "propriétaire" garde le contrôle de l'évolution, de la distribution et-ou de l'usage de ce logiciel et de ses mises à jour. Il en est donc le propriétaire, et le logiciel reste sa propriété - et non l'inverse.
Ce contrôle de la diffusion peut être utilisé pour garder le monopole d'une innovation, et donc maintenir un avantage concurrentiel qui serait lié à une nouvelle méthode ou algorithme, par exemple pour permettre de rentabiliser le travail lié à l'élaboration de celui-ci. Si le logiciel ne dévoile pas le code source, sa copie exigerait au minimum un désassemblage et une étude par rétro-ingénierie, processus long, complexe, d'efficacité variable et parfois illégal.
Ce contrôle de l'usage peut permettre à l'auteur de compter sur une rémunération basée sur une vente comparable à la vente de biens matériels (de biens rivaux), reposant sur l'interdit d'utiliser le logiciel hors rémunération. Par opposition au logiciel libre, un logiciel propriétaire garantit la rémunération de son auteur, qui est souvent une entreprise, contre l'usage non rémunéré de sa création.

Pour l'utilisateur: Niveau de sécurité : Le code source caché rend, a priori, les failles de sécurité moins faciles à trouver pour les hackers ; c'est le principe de "sécurité par l'obscurité". Ce mode de protection est généralement jugé efficace dans le cadre d'une diffusion modérée, mais sur des projets de grande envergure, l'ouverture publique du code peut aussi devenir un moyen de mieux évaluer la sécurité des algorithmes ;; Utilisation soumise aux conditions de l'auteur et donc potentiellement à une négociation commerciale ;; Interdiction potentielle de réaliser certaines copies, parfois en violation des lois sur le droit à la copie privée (cas de certains DRM) ;; Potentielle difficulté d'intégration et d'interopérabilité du fait des langages et des protocoles utilisés par l'auteur, souvent propriétaires ;; Risque de manque de transparence des contrats de licences et complexité des mécanismes de contrôle de licences.

Controverses
L'usage de logiciels propriétaires est très critiquée dans les milieux libristes, car outre la limitation de la liberté d'utilisation, ils constitueraient une menace pour la vie privée, des techniques d'espionnages pouvant être intégrées secrètement dans les logiciels. Des cas avérés de logiciels propriétaires s'étant révélés être des spywares (Skype, Windows) a poussé les membres de la communauté libriste tels que Richard Stallman à se méfier d'eux et à recommander l'usage exclusif de logiciels libres et open source. En effet, le code de ces derniers pouvant être étudié par n'importe qui, une éventuelle technique d'espionnage ou backdoor volontairement implantée par le développeur serait vite repérée et éliminée.

Libération d'un logiciel
On dit qu'un logiciel privateur est libéré lorsqu'il est publié sous une licence libre après avoir été auparavant distribué sous une licence privative.
Les plus fameux exemples de libération de logiciels sont le logiciel de bureautique StarOffice libéré en 2000 en tant qu'OpenOffice.org pour combattre l'hégémonie de Microsoft Office. Le logiciel de modélisation 3D Blender a été libéré en 2002 grâce au rachat du code source par la communauté d'utilisateurs à la suite de la faillite de la société qui l'éditait.

Articles connexes: Enfermement propriétaire; Protocole propriétaire. Portail des logiciels libres; Portail du logiciel.