Un logiciel libre est un logiciel dont l'utilisation, l'étude, la modification et la duplication en vue de sa diffusion sont permises, techniquement et légalement. Ceci afin de garantir certaines libertés induites, dont le contrôle du programme par l'utilisateur et la possibilité de partage entre individus.
Ces droits peuvent être simplement disponibles (cas du domaine public) ou bien établis par une licence, dite "libre", basée sur le droit d'auteur. Les "licences copyleft" garantissent le maintien de ces droits aux utilisateurs même pour les travaux dérivés.
Les logiciels libres constituent une alternative à ceux qui ne le sont pas, qualifiés de "propriétaires" ou de "privateurs". Ces derniers sont alors considérés par une partie de la communauté du logiciel libre comme étant l'instrument d'un pouvoir injuste, en permettant au développeur de contrôler l'utilisateur.
Le logiciel libre est souvent confondu à tort avec : les gratuiciels (freewares) : un gratuiciel est un logiciel gratuit propriétaire, alors qu'un logiciel libre se définit par les libertés accordées à l'utilisateur. Si la nature du logiciel libre facilite et encourage son partage, ce qui tend à le rendre gratuit, elle ne s'oppose pas pour autant à sa rentabilité principalement via des services associés. Les rémunérations sont liées par exemple aux travaux de création, de développement, de mise à disposition et de soutien technique. D'un autre côté les logiciels gratuits ne sont pas nécessairement libres, car leur code source n'est pas systématiquement accessible, et leur licence peut ne pas correspondre à la définition du logiciel libre.; l'open source : le logiciel libre, selon son initiateur, est un mouvement social qui repose sur les principes de Liberté, Égalité, Fraternité ; l'open source quant à lui, décrit pour la première fois dans La Cathédrale et le Bazar, s'attache aux avantages d'une méthode de développement au travers de la réutilisation du code source.
Schéma conceptuel autour du logiciel libre

Définition

Premières ébauches
La notion de logiciel libre est décrite pour la première fois dans la première moitié des années 1980 par Richard Stallman qui l'a ensuite - avec d'autres - formalisée et popularisée avec le projet GNU et la Free Software Foundation (FSF).
Une première ébauche de définition du logiciel libre est ainsi proposée en 1986 par la FSF ; un logiciel est alors dit libre s'il confère à son utilisateur les libertés suivantes : Premièrement, la liberté de copier un programme et de le redistribuer à vos voisins, qu'ils puissent ainsi l'utiliser aussi bien que vous. Deuxièmement, la liberté de modifier un programme, que vous puissiez le contrôler plutôt qu'il vous contrôle ; pour cela, le code doit vous être accessible.
Définition de la Free Software Fondation (FSF)
Aujourd'hui, un logiciel est considéré comme libre, au sens de la Free Software Foundation, s'il confère à son utilisateur quatre libertés (numérotées de 0 à 3) : 1) la liberté d'exécuter le programme, pour tous les usages ;; 2) la liberté d'étudier le fonctionnement du programme et de l'adapter à ses besoins ;; 3) la liberté de redistribuer des copies du programme (ce qui implique la possibilité aussi bien de donner que de vendre des copies) ;; 4) la liberté d'améliorer le programme et de distribuer ces améliorations au public, pour en faire profiter toute la communauté.
L'accès au code source est une condition d'exercice des libertés 1 et 3.
La FSF précise quelques points. D'abord ces libertés doivent être irrévocables. Chacun doit avoir la possibilité d'en jouir sans devoir prévenir un tiers. La redistribution du programme doit pouvoir se faire sous toute forme, notamment compilée, éventuellement à la condition de rendre disponible le code source correspondant. L'utilisateur doit pouvoir fusionner des logiciels libres dont il n'est pas lui-même l'auteur. La FSF accepte toutefois des restrictions mineures quant à la façon dont un logiciel modifié doit être présenté lorsqu'il est redistribué.

Définition du projet Debian
Le projet Debian, commencé en 1993 avec le soutien de la Free Software Foundation, a développé Les principes du logiciel libre selon Debian également connus sous l'acronyme DFSG (pour Debian Free Software Guidelines). Proposé en 1997 par Bruce Perens, le côté pratique y est mis en évidence en 10 points, en précisant par exemple : la non-discrimination des utilisateurs et des usages ; les restrictions acceptables en matière de préservation du code source de l'auteur original ; ou encore l'acceptation explicite du changement du nom d'un logiciel dont on redistribue une évolution. On peut noter à ce propos que les noms de plusieurs logiciels libres (et de leurs éditeurs) ont des marques déposées : par exemple Linux, Mozilla ou Apache.
Cette définition établie pour Debian a été reprise en 1998 dans le cadre de l'Open Source Initiative (OSI) pour établir l'Open Source Definition. La terminologie FLOSS (Free-Libre Open Source Software) est ensuite apparue pour tenter de réunir les notions de logiciel libre et logiciel open source.

"Logiciel libre" et "open source"
Logo de la Free Software Foundation
Littéralement, open source signifie "code source ouvert". Toutefois, on utilise généralement open source en référence à l'Open Source Definition introduite par l'Open Source Initiative (OSI) en 1998, qui souhaitait une autre terminologie pour les logiciels libres, qui se voulait en anglais moins ambiguë et plus adaptée au monde des affaires que Free Software.
Le mouvement pour le logiciel libre a défini des règles sur des principes éthiques, celui pour l'open source (qui en découle) a proposé une traduction fonctionnelle. Cela a déclenché des différends relatifs au respect de ces principes. Les défenseurs du logiciel libre considèrent que le logiciel libre est une affaire de philosophie, tandis que les partisans de l'open source rejettent toute philosophie.
Cette initiative a causé une controverse avec Richard Stallman et la Free Software Foundation qui regrettaient la mise en avant des principes techniques aux dépens de l'éthique. Richard Stallman explique aussi pourquoi le logiciel libre est meilleur que l'open source et pourquoi l'"open source" passe à côté du problème que soulève le logiciel libre.
S'il persiste des désaccords entre ces mouvements, il reste qu'un travail conjoint d'harmonisation fait que les définitions officielles du logiciel libre par la Free Software Foundation et de l'open source par l'Open Source Initiative renvoient dans la pratique à des licences ayant certains points communs dont voici un exemple :
"La FSF considère maintenant l'APSL comme une licence de logiciel libre avec deux problèmes pratiques majeurs, qui rappellent la NPL : Ce n'est pas un vrai copyleft, parce qu'elle autorise des liens avec d'autres fichiers qui peuvent être entièrement privateurs (propriétaires). Elle est incompatible avec la GPL. Pour cette raison, nous vous recommandons de ne pas utiliser cette licence pour publier de nouveaux logiciels ; mais il n'y a pas de problème à utiliser ou améliorer des logiciels publiés par d'autres personnes sous cette licence". (versions 1.x de l'Apple Public Source License par exemple).

Histoire du logiciel libre
À l'époque des premiers ordinateurs, c'était le matériel informatique qui était censé constituer la source de revenus, le logiciel n'étant qu'un moyen d'en faciliter la vente. L'accès au code source était normal, car nul n'achetait un ordinateur sans disposer d'une équipe de programmeurs. Bien avant même la création d'Unix, les milieux professionnels et universitaires s'échangeaient volontiers logiciels et codes sources, et les constructeurs cédaient le leur pour rien jusqu'à ce que les lois antitrust ne le leur interdisent afin de permettre l'exercice d'une concurrence dans ce domaine. En outre, jusqu'aux années 1970, il n'était pas encore tout à fait clair que le droit d'auteur s'applique aux logiciels.
Par décisions de justice, les constructeurs sont contraints de facturer séparément leurs logiciels au début des années 1970 ; en quinze ans, l'avènement de la micro-informatique va généraliser ce modèle et donner un essor aux éditeurs de logiciels qui s'orientent vers la vente de licences d'utilisation. Un exemple souvent cité pour illustrer ce tournant est une lettre ouverte de Bill Gates aux hobbyistes, leur enjoignant de cesser de copier illicitement les logiciels.
Les constructeurs ont parallèlement restreint l'accès au code source des programmes, comme en atteste la stratégie OCO, object-code only d'IBM à partir du début des années 1980. Il devient impossible, et dans certains cas interdit, d'étudier, de corriger ou d'améliorer les logiciels acquis. Non seulement l'utilisateur ne peut plus adapter le logiciel à ses souhaits, mais en cas de bug, il se retrouve dépendant du bon vouloir de l'éditeur du logiciel. Enfin, la copie, une opération naturelle pour un ordinateur, devient en règle générale interdite (par défaut, le droit d'auteur interdit la copie non explicitement autorisée). Les logiciels disponibles uniquement sous ces conditions restrictives deviennent alors la règle, et les logiciels jusqu'alors librement échangés se retrouvent souvent intégrés dans des produits commerciaux figés et non partageables.
Richard Stallman, fondateur du Mouvement du logiciel libre
Richard Stallman, alors chercheur au laboratoire d'intelligence artificielle du Massachusetts Institute of Technology, ressent profondément ce changement lorsque les collègues, avec qui il travaillait et échangeait des logiciels jusqu'ici, sont engagés à leur tour pour utiliser et produire des logiciels qu'ils ne pourront plus étudier et partager. Stallman commença à constater ces restrictions en présence de programmes sur lesquels il ne pouvait intervenir, un pilote d'imprimante notamment. Robert Sproull aurait refusé de lui fournir le code source en raison d'un contrat de non divulgation que Xerox avait passé avec lui, pratique encore peu courante à l'époque.
En 1984 il crée donc le projet GNU, qui a pour objectif de construire un système d'exploitation compatible avec Unix, et dont la totalité des logiciels est libre. Parallèlement aux travaux de développement engagés, Richard Stallman fonde la Free Software Foundation. Afin de donner une assise solide à son projet, Richard Stallman définit précisément la notion de logiciel libre et il rédige la licence publique générale GNU (GPL) qui utilise le droit d'auteur pour garantir la pérennité des libertés accordées aux utilisateurs (et donc interdire la possibilité qu'une évolution ne soit plus libre). Il publie également le manifeste GNU afin de marquer le début du projet GNU, puis les bulletins GNU périodiquement. Le projet débute par le développement de GNU emacs un éditeur de texte.
Au début des années 1990 la majorité du système GNU était fonctionnelle, seul le noyau manquait. Le Noyau est la partie d'un système d'exploitation qui communique avec le matériel et alloue les ressources aux autres programmes. Le projet GNU Hurd dont les spécifications avaient été définies par Stallman lui-même avait pour but de développer un noyau libre. Cependant le projet prenait du retard, et la conception choisie pour celui-ci paraissait difficile à mettre en oeuvre. En 1991, Linus Torvalds, un étudiant finlandais, écrit son propre noyau, puis le publie un peu plus tard sous licence GPL. Son noyau, nommé Linux, associé aux logiciels GNU précédemment développés, permettait alors de former un système d'exploitation complètement libre et pleinement utilisable.
Les années suivantes ont vu un nombre considérable de projets de logiciel libre se lancer. La fsf référence actuellement plus de 30 000 paquets de logiciel libre. Depuis la fin des années 1990, le succès des logiciels libres, notamment de GNU-Linux, suscite un vif intérêt dans l'industrie informatique et les médias.

Caractéristiques des logiciels libres

Accès aux sources
Les libertés d'étudier et modifier un logiciel supposent un accès au code source du logiciel. L'accès au code source est important car les logiciels sont généralement distribués sous une forme compilée en langage machine, prêts à être exécutés par un ordinateur. Mais le langage machine est très peu lisible par l'homme et rend l'étude du logiciel extrêmement pénible, voire impossible. L'accès au code source est donc une condition nécessaire pour permettre à l'utilisateur de savoir ce que le programme fait réellement.

Contrôle par l'utilisateur
Capture d'écran de Trisquel Gnu-Linux, un système d'exploitation constitué exclusivement de logiciels libres.
Un des objectifs principaux du logiciel libre est de permettre à l'utilisateur d'avoir le contrôle sur son ordinateur et sur les logiciels qu'il utilise. Ce contrôle est donné individuellement : chacun peut étudier en détail ce que fait le logiciel, et le modifier s'il le souhaite. Mais les utilisateurs ont aussi le contrôle de manière collective sur leur ordinateur : on ne peut étudier l'ensemble des logiciels que l'on utilise, mais on peut être certain que si un logiciel contient une fonctionnalité cachée ou malveillante, elle sera découverte un jour et un correctif sera proposé. Ceci a de plus, pour effet de dissuader, la plupart du temps, les développeurs d'ajouter de telles fonctionnalités.
Richard Stallman pense qu'en utilisant des logiciels propriétaires, les utilisateurs perdent la possibilité de contrôler une partie de leur propre vie. Les propriétaires de logiciels propriétaires (les développeurs, ou l'entreprise pour laquelle ils travaillent) ont le pouvoir d'espionner ou de restreindre les utilisateurs.
La définition du logiciel libre par la FSF précise: Quand les utilisateurs ne contrôlent pas le programme, c'est le programme qui contrôle les utilisateurs. Le développeur contrôle le programme, et par ce biais, contrôle les utilisateurs. Ce programme non libre, ou "privateur", devient donc l'instrument d'un pouvoir injuste.
Le 25 octobre 2013, dans l'émission Ce soir (ou jamais !), cette notion de contrôle fait débat entre Jacques Attali et Jérémie Zimmermann. Jacques Attali affirme "Le mot libre est très mal adapté car les logiciels dit libres sont souvent attachés à une seule entreprise." Selon Jérémie Zimmermann "la liberté pour les logiciels c'est un vrai concept (...) ce que ça veut dire c'est contrôler la machine plutôt que de se laisser contrôler par elle", ce à quoi Attali répond que "Si vous laissez chacun avoir la possibilité de contrôler sa confidentialité alors vous rendez impossible l'État de droit".

Communautés
La qualité du logiciel est souvent proportionnelle au nombre de développeurs. Plus la communauté de développement s'étend, plus elle devient un gage de qualité et de réactivité. De la même manière, la communauté des utilisateurs, ayant comme rôle principal de faire remonter des dysfonctionnements et des suggestions, a une influence proportionnelle à sa taille.
Les développeurs et utilisateurs de logiciels libres sont généralement indépendants, sans tendance politique particulière, et leurs motivations sont diverses. Ils réalisent ou utilisent des outils fondés sur un mode de production reposant sur la collaboration, l'entraide, le partage, la mutualisation. À ce titre, Bill Gates a comparé les communautés du libre à des "communistes d'un nouveau genre", bien que Richard Stallman démente être ou avoir été communiste.
En France, les communautés Ubuntu et Mozilla comptent parmi les plus actives. Il existe également des associations de défense et promotion du logiciel libre telles que l'April, l'AFUL ou le réseau Framasoft.

Formats ouverts
Les logiciels libres ont, dans leur grande majorité, tendance à respecter les formats standards ouverts, ce qui favorise l'interopérabilité. Par exemple, le développement du navigateur web Mozilla Firefox s'applique à respecter autant que possible les recommandations émises par le World Wide Web Consortium. De même, LibreOffice et Apache OpenOffice utilisent le format OpenDocument, aux spécifications publiques définies à l'origine par le comité technique d'OASIS et certifié comme norme ISO, incarnant ainsi une valeur pérenne pour les applications bureautiques. L'utilisation de formats ouverts dont l'ensemble des spécifications techniques sont connues, garantit l'accès aux documents numériques archivés.
Toutefois, la préférence pour les formats ouverts, si elle est effectivement constatée, n'est pas un élément de la définition du logiciel libre.
L'adhésion à une politique de formats ouverts touche à présent largement le monde de l'industrie informatique. À titre d'exemple, les spécifications du langage C, une création de Microsoft fortement inspirée par le langage Java de Sun Microsystems, ont été publiées et rendues exploitables par d'autres acteurs de l'informatique avant même celles de Java.

Commercialisation
La commercialisation des logiciels libres est possible mais la liberté no 2 en interdit l'exclusivité. Cette caractéristique rend délicat le retour sur investissement financier pour les développeurs du logiciel par la vente du logiciel. Autrement dit: les logiciels libres ne permettent pas de rétribution directe des auteurs. C'est pour cette raison que ces derniers se tournent souvent vers la vente de services associés à l'utilisation du logiciel (voir l'article consacré aux sociétés de services en logiciels libres).
Les licences libres les plus "contraignantes" imposent que tout projet qui réutilise le code source du logiciel libre devienne lui-même un logiciel libre. Les éditeurs traditionnels s'y refusant catégoriquement, cette disposition les enferme dans le monde du "non-libre" (l'univers des logiciels propriétaires). Il se crée alors un fossé entre les deux mondes, qui est dommageable du point de vue de l'interopérabilité et de l'harmonie entre des systèmes libres et propriétaires qui sont amenés à "cohabiter".
Il existe aussi une forme de distribution mixte: il s'agit d'un système de double licence selon lequel l'éditeur propose d'une part une distribution libre (et généralement gratuite) et, en parallèle, une distribution fermée et payante, assortie des conditions commerciales classiques des logiciels non-libres (et parfois de fonctionnalités supplémentaires).

La politique controversée des grands comptes
Certains partisans du logiciel libre voient une incohérence dans la politique de certaines entreprises ayant affiché une adhésion aux principes de l'open source mais étant favorables à l'extension du logiciel au champ du brevetable. Pour eux, le logiciel libre (via la Free Software Foundation) lutte ouvertement contre la brevetabilité des logiciels et, conséquemment, contre l'exclusivité d'exploitation d'une idée par une seule personne ou entreprise. Ils craignent qu'à terme, certains membres de l'open source détiennent des portefeuilles de brevets sur des idées, leur permettant de réclamer des redevances sur chaque portion de code source.
IBM, par exemple, déposa en Europe et aux États-Unis certains algorithmes cruciaux dans le fonctionnement général du noyau ou du système d'exploitation GNU-Linux et porta devant des tribunaux des affaires afin que les brevets logiciels soient institués et reconnus en Europe. Pourtant, cette même entreprise autorise l'usage de 500 de ces brevets aux développeurs de logiciels libres et open source.
Dans la pratique, tout procès en propriété intellectuelle coûte en temps et en argent. Il est donc difficile pour la communauté open source de faire valoir ses droits face aux multinationales. Certains de ses détracteurs l'accusent de recevoir parfois d'une multinationale des coups de pouce l'aidant à lutter contre l'influence d'une autre (ce fut un moment le cas entre Sun et Microsoft dans l'affaire OpenOffice). IBM finance également la communauté des logiciels libres contre les actions de Microsoft, etc.. Le système no win, no pay autorisé aux États-Unis (et qui fut utilisé pour défendre les victimes pauvres de Bhopal) peut éventuellement permettre à la communauté du libre de défendre ses droits, bien que les dossiers soient par nature plus complexes, demandant parfois d'examiner des centaines de milliers de lignes de code.

Sécurité
La sécurité relative des logiciels libres et propriétaires est sujette à débat. le libre accès au code source permet l'examen du logiciel par des experts indépendants ;; le libre accès au code source rend impossible le recours à la sécurité par l'obscurité, ce qui est considéré comme un avantage ou un défaut, selon le point de vue ;; la découverte de failles de sécurité est facilitée par la publication du code source. En effet, l'ouverture du code permet statistiquement à un plus grand nombre de personnes d'avoir la possibilité de repérer et de corriger des vulnérabilités.

Innovation
L'effet du logiciel libre sur l'innovation est sujet à débat.
Les partisans du logiciel libre considèrent qu'il permet de garantir une activité innovante. Parce qu'un large panel de contributeurs peuvent y apporter de nouvelles fonctionnalités. Ce dynamisme accélérerait les échanges et favoriserait l'innovation alors que le principe de "verrouillage" nuirait à ce dynamisme. Enfin l'accès à l'intégralité du code source ne permet pas de garder longtemps un avantage concurrentiel ce qui pousserait à l'innovation.
Certains innovateurs comme Pranav Mistry du Media lab (MIT, États-Unis) proposent de mettre à la fois les innovations matérielles et les innovations logicielles en licence libre pour tous.
De l'autre côté certains acteurs du monde du logiciel propriétaire considèrent au contraire que le logiciel libre peut avoir un effet négatif sur l'innovation en décourageant l'investissement d'acteurs privés.

Financement
Il existe une grande disparité à l'intérieur des logiciels sous "licence libre" en ce qui concerne leur financement. D'une part une grande majorité de petits logiciels non financés (bénévolat), et d'autre part des logiciels majeurs du marché, financés principalement par les grands acteurs de l'industrie informatique, ainsi Linux est financé entre autres par Red Hat, IBM et Intel, Firefox par Google.
En France les entreprises consacrent "16 % de part de budget informatique alloués aux logiciels libres"

Licences

Base légale
Les logiciels libres sont soumis, comme tout logiciel publié hors du domaine public, au droit d'auteur. Dans ce cadre, le droit d'auteur est exercé par le biais d'une licence libre qui énumère les droits que l'auteur choisit d'octroyer à l'utilisateur.
Eben Moglen, contributeur à la conception de la licence GNU GPL (notamment la version 3), insiste sur la distinction entre licence et contrat qui existe en droit américain : une licence est une autorisation unilatérale, tandis qu'un contrat suppose des obligations réciproques. Les logiciels libres sont distribués avec de simples licences. Généralement, ils sont également distribués sans la moindre garantie.
Certaines licences, dont la plus connue et utilisée pour les logiciels libres, la licence publique générale GNU, sont relativement complexes. Ainsi, la GPL ne donne le droit de redistribuer un logiciel que si l'ensemble du logiciel, y compris toutes les éventuelles modifications, sont redistribuées selon les termes exacts de la GPL. Cette licence a un caractère héréditaire car la fusion d'un logiciel sous GPL avec un logiciel non GPL, n'autorise la redistribution du logiciel fusionné que sous GPL.

Licences libres
Les licences des logiciels libres sont souvent réparties en trois catégories, selon le degré de liberté qu'elles accordent en matière de redistribution.
La Fondation pour le logiciel libre ou Free Software Foundation, catégorise les licences d'après quelques questions clés : permet-elle de qualifier, ou non, un logiciel libre ; s'agit-il, ou non, d'un "Copyleft" ou "gauche d'auteur" ; est-elle compatible avec la GPL de GNU À moins que le contraire ne soit spécifié, les licences compatibles le sont à la fois avec la GPLv2 et la GPLv3 ;; pose-t-elle certains problèmes pratiques.

Domaine public
En langage courant : "Le logiciel appartient à tout le monde". C'est une caractéristique juridique qui n'a pas besoin de licence du fait que le logiciel n'a aucun ayant droit. Les droits patrimoniaux concernant ce logiciel disparaissant, il peut alors être utilisé encore plus librement, sous réserve que soient respectés les droits extra-patrimoniaux de ses auteurs. Théoriquement, tout logiciel tombe dans le domaine public une fois les droits d'auteur échus. Toutefois, la durée de protection des droits d'auteur est bien plus longue que le plus ancien des logiciels, par exemple 70 ans après la mort de l'auteur dans tous les pays de l'Union européenne. On ne trouve donc dans le domaine public que des logiciels qui y ont été placés à la suite d'une renonciation aux droits.

Licences de type BSD
Il s'agit d'un type de licence imposant peu de contraintes; cependant, ce type de licence ne protège pas contre les restrictions. En général, seule la citation des auteurs originaux est demandée. En particulier, ces licences permettent de redistribuer un logiciel libre sous une forme non libre. Ces licences permettent donc à tout acteur de changer la licence sous laquelle le logiciel est distribué. Un cas de changement de licence courant est l'intégration de logiciel sous licence BSD dans un logiciel sous copyleft (licence GPL). Un autre cas courant est l'intégration de logiciel sous licence BSD dans les logiciels propriétaires.
Ces licences sont notamment utilisées par la Berkeley software distribution (licence BSD), X Window (licence MIT) et Apache Software Foundation (licence Apache).

Copyleft, licences de type GPL
Logo copyleft ("gauche d'auteur" ou "laisser copier", les deux traductions sont possibles) Le C "inversé" est le symbole du copyleft. En 2009, il n'est pas reconnu comme symbole légal. L'"opposé" est le symbole copyright.
"GPL" est l'acronyme de "General Public License" (Licence Publique Générale). La plus répandue des licences de ce type est la Licence Publique Générale GNU (GNU General Public License), ou GNU GPL pour faire court. On peut réduire encore plus en "GPL", s'il est entendu qu'il s'agit de la GNU GPL. La Free Software Foundation ou FSF se réfère à la catégorie de licence "copyleft".
La GPL contient des "contraintes contre les contraintes". Par exemple, l'article deux de la GPL permet d'apporter des modifications et de la distribution d'une oeuvre sous licence GPL si le licencié fait tout le travail soit concédé comme un tout, sans frais à toute tierce partie suivant les termes de la GPL. Autrement dit, cette licence interdit la redistribution hors des principes du copyleft, car "Si un programme est un logiciel libre au moment où il quitte les mains de son auteur, cela ne signifie pas nécessairement qu'il sera un logiciel libre pour quiconque en possèdera une copie." Les licences du projet GNU sont les plus célèbres. Une telle licence permet d'intégrer du logiciel sous licence BSD et de le redistribuer sous licence GPL. L'inverse est impossible. La licence GPL est critiquée puisqu'elle empêche les fournisseurs de logiciels propriétaires de censurer le code.
La contrainte en aval contre les restrictions est intentionnelle. Les auteurs de la GPL soutiennent également que tous les logiciels doivent être sous licence libre parce qu'il est moralement inacceptable de faire autrement.
La GPL entretient l'effort de rendre le plus de logiciel libre possible et ce unidirectionnellement. Il s'agit d'une licence qui protège inconditionnellement les développements logiciels appartenant au domaine public.
D'importants programmes libres sous licence comme le compilateur GNU C++, le noyau Linux et la suite de bureautique LibreOffice n'existeraient pas sans cela.
En somme, la licence GPL est conçue pour protéger les libertés des utilisateurs tout en facilitant la coopération avec la communauté du logiciel libre.

Licences non libres
Schéma de classification des CLUF
Un logiciel non libre est appelé logiciel propriétaire ou logiciel privateur. Cette première appellation peut apparaître trompeuse, car à l'exception de logiciels du domaine public, les logiciels libres n'ont pas moins de propriétaires que les autres, encore que le terme auteurs soit plus approprié. Les auteurs de logiciels libres conservent certains droits dépendants du type de licence libre employée.
Quelques exemples de logiciels non libres : - freeware, logiciels gratuits, graticiels On utilise ce terme pour les logiciels propriétaires qui sont distribués gratuitement. Les freewares ne sont pas libres car leur code source n'est pas disponible et donc seul l'auteur original peut l'améliorer et publier des versions modifiées. En outre, la revente d'un freeware est souvent restreinte. - shareware, logiciels à partager, partagiciels Le shareware est un logiciel qu'on peut légitimement se procurer gratuitement, mais qu'on doit payer si l'on désire l'utiliser. Aucun logiciel libre n'est un shareware. À la limite, un logiciel libre pourrait encourager la rétribution de l'auteur, sans que cela n'ait force de licence (sans quoi il ne serait plus libre). Mais toute personne serait libre de supprimer l'encouragement et de redistribuer cette version allégée. - Shared source Le terme Shared source (code source partagé) vient de la Shared Source Initiative de Microsoft. Il s'agit d'un type de licence qui donne le droit de regarder le code source et parfois d'en distribuer des versions modifiées. Toutefois, le droit de vendre n'est pas attribué et les licences shared source ne sont pas considérées comme des licences de logiciel libre.

Offre en logiciels libres

Typologies de services rendus
Des logiciels libres sont aujourd'hui disponibles pour des besoins aussi variés que la gestion de projets, de temps, gestion d'établissements scolaires ou universitaires, incluant des modules de comptabilité, finances, ressources humaines, cursus et scolarité, documentation, communication, formation, pédagogie, travail collaboratif, gestion de données et de contenu, gestion de contenu web, gestion de l'apprentissage, gestion des droits numériques, créativité (arbres heuristiques...). Portails et plates-formes numériques de travail ou d'enseignement (TICE dont formation en ligne), services numériques divers, etc. Leur maintenance et développement peuvent être externalisés ou coopératifs.

Quelques exemples
. Logos de quelques-uns des logiciels libres les plus célèbres.
Parmi les logiciels libres les plus connus du grand public figurent : Linux, le noyau du système d'exploitation GNU-Linux ;; les logiciels et bibliothèques composant GNU ;; les systèmes d'exploitation FreeBSD, OpenBSD et NetBSD ;; les environnements de bureau GNOME et KDE ;; les navigateurs web Mozilla Firefox et Chromium;; la suite bureautique LibreOffice ;; le lecteur multimédia VLC media player ;; le logiciel de retouche d'image GIMP ;; les gestionnaires de base de données Ingres, MySQL et PostgreSQL ;; la messagerie électronique Mozilla Thunderbird ;; le logiciel de modélisation 3D Blender ;; l'éditeur de son Audacity ;; les langages de script PHP et Python.
Les logiciels libres ont aussi un rôle important dans le fonctionnement d'Internet : le serveur HTTP Apache ;; le serveur BIND pour la gestion des noms de domaine ;; les serveurs de messagerie sendmail et postfix sont très utilisés.; Les systèmes de chiffrement: Openssl, Tor et GnuPG.
Le réseau Framasoft, dont le slogan est "la route est longue mais la voie est libre", référence dans son annuaire plus de mille six cents logiciels libres.

Le logiciel libre dans le marché du logiciel
Part de marché du logiciel libre dans le marché du logiciel au fil des années
Le logiciel libre s'impose de plus en plus comme une solution de remplacement moins coûteuse que les logiciels propriétaires. Il devient également un produit de plus en plus mis en avant par des revendeurs, soit pour sa fiabilité (cas de fournisseurs de serveurs), soit pour son coût de licence nul, permettant au client d'investir la différence dans des services associés.
Le tableau suivant reprend les données disponibles pour la France : Rapports Pierre Audoin Consultants(Note 6).
Du côté des administrations, on peut citer les gouvernements brésilien, sud-africain, d'Andalousie et d'Estrémadure en Espagne, qui ont officiellement affiché leur orientation vers le logiciel libre. En France, on peut noter, après la gendarmerie nationale, le passage de secteurs l'administration centrale à LibreOffice via MIMO.
En France, le chiffre d'affaires du logiciel libre en 2007 est de 730 millions d'euros. Rapportés aux 30 milliards du marché du logiciel, cela représente 2,4 % de part de marché (contre 1,5 % en 2006).
En outre, l'AFUL a édité un dossier et l'April un livre blanc sur les modèles économiques liés au logiciel libre.
La position officielle de la France pour "l'usage du logiciel libre dans l'administration" est précisée en septembre 2012 dans un document du même nom appelé aussi circulaire Ayrault sur le logiciel libre car adressé par ce dernier à l'ensemble de ses ministres.
Le cabinet Pierre Audoin prévoit une part de marché du logiciel libre de 20 % dans les logiciels et services en 2020.

Promotion du logiciel libre
Des conférences et ateliers sont organisés régulièrement pour promouvoir le logiciel libre avec découvertes, démonstrations et évolutions des logiciels entrant dans la définition du libre. Ce sont des événements organisés à des niveaux scolaires comme le Capitole du Libre, régionaux, nationaux et internationaux comme le FOSDEM.