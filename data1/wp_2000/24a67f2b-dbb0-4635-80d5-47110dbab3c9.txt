POSIX est une famille de normes techniques définie depuis 1988 par l'Institute of Electrical and Electronics Engineers (IEEE), et formellement désignée par IEEE 1003. Ces normes ont émergé d'un projet de standardisation des interfaces de programmation des logiciels destinés à fonctionner sur les variantes du système d'exploitation UNIX.
Le terme POSIX a été suggéré par Richard Stallman, qui faisait partie du comité qui écrivit la première version de la norme. L'IEEE choisit de le retenir car il était facilement mémorisable. Les quatre premières lettres forment l'acronyme de Portable Operating System Interface (interface portable de système d'exploitation), et le X exprime l'héritage UNIX.

Présentation
POSIX spécifie dans dix-sept documents différents les interfaces utilisateurs et les interfaces logicielles. La ligne de commande standard et l'interface de script est le Bourne shell. Les autres commandes, services et utilitaires comprennent awk, echo, ed, et des centaines d'autres. Les services d'entrées-sorties de base (fichiers, terminaux, réseau) doivent être présents ; le système doit supporter certains attributs spécifiques pour les fichiers. POSIX définit aussi une interface de programmation standard, et celle-ci est prise en charge par la plupart des systèmes d'exploitation récents.
Une suite de tests pour POSIX accompagne le standard. Il est appelé PCTS (POSIX Conformance Test Suite, suite de tests pour la conformité POSIX).
Comme l'IEEE vend très cher la documentation POSIX et ne permet pas sa publication sur Internet, certains se sont tournés vers le standard Single UNIX Specification. En effet, ce dernier est ouvert, accepte les propositions de quiconque veut y contribuer, et est disponible gratuitement sur Internet. Ce travail remonte au début de 1998, lorsqu'un groupe de travail commun, l'Austin Group (en), a commencé à développer un standard qui est devenu la Single UNIX Specification Version 3.
Bien qu'il soit principalement implémenté sur des systèmes de type UNIX, le standard POSIX peut être utilisé par n'importe quel autre système d'exploitation. Par exemple, Microsoft Windows NT 3.x et 4 sont certifiés conformes à POSIX.1:1990, ce qui est suffisant pour des applications POSIX relativement simples. Cependant, des programmes plus complexes ont besoin d'une compatibilité plus large. Des logiciels supplémentaires tels que Services for UNIX ou Cygwin peuvent apporter à Windows ce niveau de compatibilité. UWIN offre une compatibilité POSIX, y compris sur les chemins de fichiers.
Le consortium Linux Standard Base publie plusieurs extensions et des standards de fait pour les systèmes d'exploitation basés sur Linux. Elles sont peu susceptibles d'être reprises par les autres systèmes de type UNIX, qui respectent d'autres standards plus anciens, bien que dans de nombreux cas la Linux Standard Base reprenne ces derniers.
Une grande partie des API de POSIX a été définie à une époque où l'adressage des machines se faisait sur 32 bits au maximum. Pour préserver la compatibilité entre les versions de certains systèmes d'exploitation, en mode de conformité POSIX les fichiers ne pouvaient dépasser 2 Go. En effet, le standard précisait que la position d'un octet de fichier par rapport à la position courante était contenue dans un entier signé de 32 bits.

Organisation
Actuellement, la documentation de POSIX est divisée en trois parties : les API (permet de définir la manière dont un composant informatique peut communiquer avec un autre) de base (qui comprennent des extensions à POSIX.1, les services temps réel, les processus légers, les extensions temps réel, l'interface de sécurité, l'accès aux fichiers par le réseau, et les communications inter-processus par le réseau) ;; les commandes et utilitaires POSIX (extensions de portabilité des utilisateurs, corrections et extensions, utilitaire de protection et de contrôle, utilitaires pour le traitement par lots) ;; test de conformité à POSIX.

Versions
La norme POSIX a connu plusieurs versions : POSIX.1, Services centraux (inclut le standard ANSI C) (IEEE Std 1003.1-1988) porte sur : la création et le contrôle des processus; les gestions des signaux inter-processus; les exceptions des nombres flottants (gestion du FPU); les violations de segmentation; les instructions illégales; les erreurs de bus; les timers; les opérations sur les fichiers et les dossiers; les tubes; la bibliothèque standard de C; les entrées-sorties et le contrôle des ports.; la création et le contrôle des processus; les gestions des signaux inter-processus; les exceptions des nombres flottants (gestion du FPU); les violations de segmentation; les instructions illégales; les erreurs de bus; les timers; les opérations sur les fichiers et les dossiers; les tubes; la bibliothèque standard de C; les entrées-sorties et le contrôle des ports; POSIX.1b, extension pour le temps réel (IEEE Std 1003.1b-1993) : l'ordonnancement; les signaux en temps réel; les horloges et les timers; les sémaphores; le passage de messages; la mémoire partagée; les entrées-sorties synchrones et les entrées-sorties asynchrones (en); les outils de verrouillage de la mémoire.; l'ordonnancement; les signaux en temps réel; les horloges et les timers; les sémaphores; le passage de messages; la mémoire partagée; les entrées-sorties synchrones et les entrées-sorties asynchrones (en); les outils de verrouillage de la mémoire; POSIX.1c, extension sur les processus légers (les threads) (IEEE Std 1003.1c-1995) : la création, le contrôle et la suppression des threads; l'ordonnancement des threads; la synchronisation des threads; l'interception des signaux (Signal Handling).; la création, le contrôle et la suppression des threads; l'ordonnancement des threads; la synchronisation des threads; l'interception des signaux (Signal Handling).

Limitations
Certains systèmes POSIX peuvent éventuellement présenter des limitations qui donnent aux utilisateurs le sentiment d'être exposé à des bugs connus et avérés. C'est notamment le cas des secondes intercalaires ou de la non prise en compte de la possible présence de l'indicateur d'ordre des octets UTF-8 dans le shebang.

Linux et POSIX

Variable d'environnement POSIXLY-CORRECT
La variable d'environnement POSIXLY-CORRECT permet d'indiquer si une commande doit se conformer à POSIX ou non. Les commandes d'administration ne sont pas concernées par cette variable.
Plusieurs dizaines de commandes adaptent leur fonctionnement en fonction de la valeur de POSIXLY-CORRECT ; les exemples les plus typiques sont les commandes grep et find, mais il en existe bien d'autres : apropos, at, df,.., rgrep, setfacl, etc.
Cette variable d'environnement sert par exemple à définir si une commande doit utiliser le format de donnée conforme à POSIX ou celui qui est utilisé par défaut par cette commande.

Certification POSIX de Linux
-Unifix Linux 2.0 de la société allemande Unifix et Linux-FT de Lasermoon sont certifiés POSIX.1 FIPS 151-2. Noyau 1.2.13
Le site Debian explique que "les normes de POSIX ne sont pas gratuites et la certification POSIX.1 (et FIPS 151-2) est très chère".

Voir aussi

Articles connexes: LSB : ce projet est basé sur POSIX et a pour but de standardiser la structure interne des systèmes d'exploitation basés sur GNU-Linux.; unistd.h : Cet include indique la version de la norme Posix à utiliser pour la compilation; Sanos.