Soar (à l'origine SOAR) est une architecture cognitive symbolique, créée par John Laird (en), Allen Newell, et Paul Rosenbloom à l'Université Carnegie-Mellon. C'est à la fois un point de vue sur la cognition et une implémentation de ce point de vue au travers d'une architecture de programmation pour l'Intelligence artificielle (IA). Depuis ses débuts en 1983 et sa présentation dans un article en 1987, Soar a été largement utilisé par les chercheurs en IA pour modéliser différents aspects du comportement humain.

Origine du nom
SOAR signifiait à l'origine State, Operator And Result (État, Opérateur Et Résultat) , ce qui reflétait la représentation de la résolution de problèmes comme l'application d'un opérateur à un état pour obtenir un résultat. Selon le projet FAQ, la communauté de développement de Soar ne considère plus Soar comme un acronyme, et ce terme n'est donc plus écrit en majuscules, bien que cela soit toujours représentatif du noyau de l'implémentation.

Principes
L'objectif principal du projet Soar est de permettre de gérer tout l'éventail des capacités d'un agent intelligent, de la routine la plus banale jusqu'aux problèmes non déterminés les plus difficiles. Pour y parvenir, selon la conception qui sous-tend Soar, il doit être capable de créer des représentations de la connaissance et d'utiliser des formes appropriées de la connaissance (procédurale, déclarative, épisodique, et éventuellement iconique). Soar accéderait alors à un ensemble de mécanismes de l'esprit. Une autre idée sous-jacente à l'architecture Soar est qu'un système symbolique est nécessaire et suffisant pour l'intelligence générale (discussion dite Neats vs. scruffies (en)). Cette hypothèse est connue sous le nom de "système de symboles physiques" (physical symbol system (en)), ou "système formel". La conception de la cognition qui sous-tend Soar est liée à la théorie psychologique présentée dans l'ouvrage de Allen Newell, Théories unifiées de la cognition.
Bien que le but de Soar soit d'aboutir à une intelligence générale, personne n'affirme que ce but ait déjà été atteint. Les partisans de Soar reconnaissent qu'il lui manque encore certains aspects importants de l'intelligence. Il existe actuellement des projets en cours pour lui ajouter des capacités de mémorisation épisodique et sémantique, ainsi qu'une base émotionnelle. On peut aussi mentionner, parmi les facultés qui lui manquent encore, celle de créer de lui-même de nouvelles représentations, par exemple au moyen de regroupements hiérarchiques.
Soar est basé sur un système de production, c'est-à-dire qu'il utilise des règles explicites de production pour gérer son comportement (celles-ci sont en gros de la forme "si... alors...", à l'image de celles qu'on trouve dans les systèmes experts. La résolution de problèmes peut être décrite grossièrement comme le balayage d'un "espace de problème" (l'ensemble des différents états susceptibles d'être atteints par le système à un moment particulier), à la recherche d'un "état final" (goal state), qui représente la solution du problème. Ceci s'effectue en recherchant les états qui rapprochent graduellement le système du but. Chaque étape consiste en un cycle de décision qui comporte une phase d'élaboration (au cours de laquelle divers éléments de connaissance en rapport avec le problème sont amenés dans la mémoire de travail de Soar), et une procédure de décision (qui évalue par pondération les résultats de la phase précédente et leur assigne des préférences, pour décider en fin de compte de l'action à effectuer).
Lorsque la procédure de décision décrite plus haut n'est pas en mesure de déterminer une ligne de conduite unique, Soar peut utiliser différentes stratégies, connues sous le nom de méthodes faibles (weak methods) pour sortir de l'impasse. Ces méthodes sont appropriées à des situations pour lesquelles la connaissance est peu abondante. On peut mentionner l'analyse par les moyens et des fins (means-ends analysis (en), MEA), qui peut calculer la différence entre chaque option disponible et l'état final recherché, et la technique heuristique d'optimisation dite hill climbing (en) (litt. "gravir la colline"). Lorsque l'utilisation de l'une de ces méthodes aboutit à une solution, Soar utilise une technique d'apprentissage appelée chunking (en) qui transforme la ligne de conduite suivie en une nouvelle règle. Celle-ci pourra alors être utilisée chaque fois que Soar rencontrera la même situation, laquelle ne constitue donc plus une impasse.

Autres modèles
Le modèle ACT, notamment ACT-R constitue une autre architecture cognitive due à John Robert Anderson (psychologist) (en), qui opère selon des principes similaires. On peut citer d'autres architectures cognitives comme CHREST, CLARION (en), CARUS, DUAL et Psi.

Sources: (en) Cet article est partiellement ou en totalité issu de l'article de Wikipédia en anglais intitulé "Soar (cognitive architecture)". Portail des neurosciences.