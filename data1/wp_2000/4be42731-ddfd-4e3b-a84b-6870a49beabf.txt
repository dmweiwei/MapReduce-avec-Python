MySQL (prononcer) est un système de gestion de bases de données relationnelles (SGBDR). Il est distribué sous une double licence GPL et propriétaire. Il fait partie des logiciels de gestion de base de données les plus utilisés au monde, autant par le grand public (applications web principalement) que par des professionnels, en concurrence avec Oracle, Informix et Microsoft SQL Server.
Son nom vient du prénom de la fille du cocréateur Michael Widenius, My. SQL fait référence au Structured Query Language, le langage de requête utilisé.
MySQL AB a été acheté le 16 janvier 2008 par Sun Microsystems pour un milliard de dollars américains. En 2009, Sun Microsystems a été acquis par Oracle Corporation, mettant entre les mains d'une même société les deux produits concurrents que sont Oracle Database et MySQL. Ce rachat a été autorisé par la Commission européenne le 21 janvier 2010.
Depuis mai 2009, son créateur Michael Widenius a créé MariaDB pour continuer son développement en tant que projet Open Source.

Caractéristiques
MySQL est un serveur de bases de données relationnelles SQL développé dans un souci de performances élevées en lecture, ce qui signifie qu'il est davantage orienté vers le service de données déjà en place que vers celui de mises à jour fréquentes et fortement sécurisées. Il est multi-thread et multi-utilisateur.
C'est un logiciel libre, open source, développé sous double licence selon qu'il est distribué avec un produit libre ou avec un produit propriétaire. Dans ce dernier cas, la licence est payante, sinon c'est la licence publique générale GNU (GPL) qui s'applique. Un logiciel qui intègre du code MySQL ou intègre MySQL lors de son installation devra donc être libre ou acquérir une licence payante. Cependant, si la base de données est séparée du logiciel propriétaire qui ne fait qu'utiliser des API tierces (par exemple en C ou php), alors il n'y a pas besoin d'acquérir une licence payante MySQL. Ce type de licence double est utilisé par d'autres produits comme le framework de développement de logiciels Qt (pour les versions antérieures à la 4.5).

Systèmes d'exploitation supportés
MySQL fonctionne sur de nombreux systèmes d'exploitation différents, incluant AIX, IBM i-5, BSDi, FreeBSD, HP-UX, Linux, Mac OS X, NetWare, NetBSD, OpenBSD, OS-2 Warp, SGI IRIX, Solaris, SCO OpenServer, SCO UnixWare, Tru64 Unix, Windows.
Les bases de données sont accessibles en utilisant les langages de programmation C, C++, VB, VB.NET, C, Delphi-Kylix, Eiffel, Java, Perl, PHP, Python, Windev, Ruby et Tcl ; une API spécifique est disponible pour chacun d'entre eux. Une interface ODBC appelée MyODBC est aussi disponible. En Java, MySQL peut être utilisé de façon transparente avec le standard JDO.

Langages informatique supportés
MySQL supporte deux langages informatique, le langage de requête SQL et le SQL-PSM (Persistent Stored Modules), une extension procédurale standardisée au SQL incluse dans la norme SQL:2003. SQL-PSM, introduit dans la version 5 de MySQL, permet de combiner des requêtes SQL et des instructions procédurales (boucles, conditions...), dans le but de créer des traitements complexes destinés à être stockés sur le serveur de base de données (objets serveur), par exemple des procédures stockées ou des déclencheurs (rudimentaires).

Utilisation
MySQL fait partie du quatuor LAMP : Linux, Apache, MySQL, PHP. Il appartient également à ses variantes WAMP (Windows) et MAMP (Mac OS).
Le couple PHP-MySQL est très utilisé par les sites web et proposé par la majorité des hébergeurs Web. Plus de la moitié des sites Web fonctionnent sous Apache, qui est le plus souvent utilisé conjointement avec PHP et MySQL.

Historique
Wikipédia a utilisé MySQL jusqu'en fin 2012 (MariaDB est aujourd'hui utilisé), de nombreuses entreprises, dont Google, Yahoo!, YouTube, Adobe, Airbus, Alstom, Crédit agricole, AFP, Reuters, BBC News, Ernst et Young, Alcatel-Lucent l'utilisent encore. Ces entreprises utilisent et-ou développent aussi des systèmes de bases de données NoSQL (not only SQL) plus efficaces pour les bases de données géantes et fortement réparties, par exemple BigTable pour Google.

Version de SQL
MySQL supporte la norme SQL2 (utilisation des RIGHT JOIN et LEFT JOIN), ce qui fait de lui un SGBD sûr, la conformité à cette norme garantissant qu'il honorera les requêtes normalisées correspondantes. Cependant, les fonctionnalités des normes SQL les plus récentes ne sont pas toutes implémentées et certaines ne respectent pas la syntaxe recommandée (la concaténation par exemple), empêchant l'interopérabilité des requêtes entre différents SGBD.

Fonctionnalités
Ne supportant (sauf en utilisant des moteurs comme InnoDB) ni transactions ni intégrité automatique des tables, il n'est pas destiné aux transactions financières intensives; cependant, ses performances (parfois meilleures que celles de systèmes concurrents fermés) et son prix d'implantation nettement inférieur le font adopter dans des entreprises ou services ayant besoin d'une base de données simple et peu onéreuse à mettre en oeuvre pour des applications non critiques. phpMyAdmin permet de créer, remplir et utiliser des bases MySQL avec presque la facilité d'un tableur.

Interopérabilité
Les tables des bases de données SQL et celles des tableurs communiquent bien dans le deux sens (en ce qui concerne les seules données numériques et chaînes de caractères) au moyen du format CSV. Des formats de sauvegarde et restauration existent, sous forme d'ordres SQL, ainsi qu'en format XML.

Usage en production
L'intérêt d'utiliser des outils ouverts a également poussé quelques établissements bancaires tels que le Crédit mutuel, le Crédit agricole, le Crédit lyonnais, la Banque de développement du Canada à inscrire MySQL au catalogue de leurs produits informatiques internes.

Dénomination
MySQL est l'oeuvre d'une société suédoise, MySQL AB, fondée par David Axmark, Allan Larsson et Michael "Monty" Widenius.
Le nom MySQL vient de la combinaison de My, fille du cofondateur Michael "Monty" Widenius, avec l'acronyme SQL (selon la documentation de la dernière version en anglais). D'autre part, le dossier base et une grande partie des bibliothèques utilisées par les développeurs utilisent le préfixe My.
Le nom du logo de MySQL (le dauphin) Sakila, a été choisi par les créateurs de MySQL sur la base d'un concours. Il a été proposé par Ambrose Twebaze, développeur du Swaziland. D'après Ambrose, le nom Sakila puise ses origines du siswati, la langue locale du Swaziland.

Historique
David Axmark, fondateur de MySQL.
La première version de MySQL est apparue le 23 mai 1995. Il a d'abord été créé pour un usage personnel à partir de mSQL en s'appuyant sur le langage de bas niveau ISAM qu'ils trouvaient trop lent et trop rigide. Ils ont créé une nouvelle interface SQL en gardant la même API que mSQL.
MySQL est passé en licence GPL à partir de la version 3.23.19 (juin 2000): Version 4.0 : première version en octobre 2001, stable depuis mars 2003; Version 4.1 : première version en avril 2003, stable depuis octobre 2004; Version 5.0 : première version en décembre 2003, stable depuis octobre 2005; Version 5.1 : première version en novembre 2005, Release Candidate distribuée depuis septembre 2007; Version 5.2 : distribuée en avant-première (ajout du nouveau moteur de stockage Falcon) en février 2007, cette ligne a ensuite été renommée 6.0; Version 5.5 : Version stable depuis octobre 2010; Version 5.6 : Version stable depuis février 2013; Version 5.7 : Version stable depuis octobre 2015; Version 6.0 : première version alpha en avril 2007, abandonnée depuis le rachat de MySQL par oracle en décembre 2010.
En 2003, MySQL AB et SAP AG concluent un accord. Le résultat s'appellera MaxDB. Il est issu de l'intégration du système de SAP (SAP DB) dans MySQL.
Le 20 avril 2009, Oracle Corporation annonce racheter Sun Microsystems pour 7,4 milliards de dollars, créant la crainte de voir MySQL disparaître - ou du moins ne plus être développé - au profit d'Oracle, le SGBD d'Oracle Corporation. MySQL est cependant loin d'avoir toutes les fonctionnalités d'Oracle, et pourrait donc être vu au contraire par la société comme un produit gratuit d'appel banalisant l'usage de SQL et préparant donc ses futures ventes.

Moteurs de base de données inclus
L'une des spécificités de MySQL est de pouvoir gérer plusieurs moteurs au sein d'une seule base. Chaque table peut utiliser un moteur différent au sein d'une base. Ceci afin d'optimiser l'utilisation de chaque table.
Voici les différents moteurs historiques de MySQL : MyISAM : moteur par défaut de MySQL jusqu'à la version 5.5. Il est le plus simple à utiliser et à mettre en oeuvre. Il utilise plusieurs fichiers qui grandissent au fur et à mesure que la base grossit. Il ne supporte pas les transactions, ni les clefs étrangères ;; InnoDB : moteur créé et maintenu par InnoBase (racheté par Oracle le 7 octobre 2005). Il gère les transactions et les clefs étrangères (et donc l'intégrité de ses tables). En contrepartie, les bases qui l'utilisent occupent bien plus d'espace sur le disque. InnoDB est le moteur par défaut depuis la version 5.6.; BerkeleyDB (BDB) : moteur fourni par Sleepycat Software qui gère les transactions ;; MERGE : moteur fait pour fusionner plusieurs tables qui doivent être identiques ;; ARCHIVE : moteur adapté à l'archivage de données. Les lignes sont compressées au fur et à mesure de leur insertion. Les requêtes de recherches sont alors sensiblement plus lentes ;; MEMORY (HEAP) : moteur où les tables sont stockées uniquement en mémoire. La structure de la base est stockée sur le disque dur mais les données sont stockées dans la RAM, si la machine serveur redémarre, les données seront perdues. Cependant, étant donné qu'il n'y a plus d'accès disque, une requête de modification (UPDATE, INSERT...) s'exécutera bien plus rapidement et sans charger les bras d'accès ; convient pour les mémorisations temporaires, comme un panier en e-commerce;; CSV : moteur utilisant des fichiers textes (au format CSV) comme stockage ;; BLACKHOLE : moteur réceptionnant les données, les transférant mais ne les stockant pas. Il peut être utilisé comme répéteur ou comme filtre de données ;; ISAM : moteur d'origine de MySQL, maintenant obsolète et remplacé par MyISAM. Il est resté pour des raisons de compatibilité ;; NDB (uniquement dans la version MaxDB) : moteur de base de données réseau gérant les grappes de serveurs ;; Federated : moteur permettant d'accéder à des tables d'une base de données distantes plutôt que dans les fichiers locaux ;; EXEMPLE : moteur fictif et inutilisable, mis à disposition pour les développeurs ;; FALCON (en) : ce nouveau moteur devait faire son apparition avec MySQL 6. À l'époque MySQL AB avait voulu créer un nouveau moteur transactionnel pour ne plus dépendre d'Oracle qui venait de racheter InnoBase, créateurs du moteur de stockage InnoDB. Ce moteur de stockage a été abandonné depuis le rachat de MySQL par Oracle.; MARIA : évolution ACID de MyISAM.
Des moteurs de stockages OPEN Source : Infobright : moteur VLDB, orienté vers les applications décisionnelles ;; Sphinx : moteur orienté recherche full text ;; PBXT : moteur transactionnel proche des performances d'InnoDB ;; Memcached : moteur orienté table de hash en mémoire ;; M4q : moteur orienté gestion de file d'attente.
Des moteurs de stockages commerciaux : DB2 Moteur transactionnel copyright IBM ;; SolidDB Moteur transactionnel copyright IBM ;; NitroEDB Moteur VLDB copyright BrightHouse ;; Tokutek Moteur VLDB.
La facilité d'utilisation de plusieurs moteurs de stockage dans une seule base avec MySQL permet une énorme flexibilité dans l'optimisation de la base : on utilisera MyISAM pour stocker les données peu sensibles et nécessitant un accès rapide aux données (par exemple une liste d'utilisateurs), InnoDB pour les fonctions avancées et les données plus sensibles (par exemple pour une liste des transactions bancaires), MEMORY pour des données pouvant être perdues lors du redémarrage de la machine et souvent modifiées (par exemple une liste d'utilisateurs en ligne), ARCHIVE pour un historique (ou log) ne nécessitant que peu de lecture...

Grappes de serveurs
Deux méthodes existent pour répartir la charge sur un ensemble de machines fonctionnant sous MySQL Server. Ces méthodes permettent d'assurer une redondance (si une machine tombe en panne, d'autres peuvent prendre la relève), d'améliorer la rapidité des recherches (SELECT) ou encore d'établir une machine dédiée à la sauvegarde des données.

Réplication
Réplication sous MySQL.
MySQL est capable, depuis la version 3.23.15 d'utiliser un système de réplication à sens unique relativement simple à mettre en place : un serveur maître qui contient la base de données source et va recevoir l'ensemble des modifications, et un serveur esclave qui contient une base à structure identique et qui va se connecter au serveur maître pour aller chercher les nouvelles modifications et mettre à jour ses bases. Un maître peut avoir plusieurs esclaves, et un esclave peut devenir à son tour maître pour un autre serveur esclave, réalisant ainsi une chaîne de réplication.
Toutes les modifications (UPDATE, DELETE, INSERT...) doivent être envoyées au serveur maître et seront automatiquement répercutées sur ses esclaves, mais les requêtes de recherche (SELECT), souvent plus nombreuses et plus gourmandes en ressources pourront être effectuées sur un ou plusieurs esclaves. Comme les requêtes de modifications doivent être redirigées sur le serveur maître, la conception de l'application doit s'adapter à l'architecture : le programmeur va ouvrir deux connexions dans son programme, une sur le serveur maître, sur lequel il exécutera toutes ses modifications et une sur le serveur esclave sur lequel il exécutera toutes ses recherches.
Ce système ne permet cependant qu'une redondance limitée : Si le serveur maître tombe en panne, son esclave peut prendre le relais, mais il est nécessaire au programmeur de mettre à jour son programme pour charger le serveur qui va recevoir les modifications, ou de programmer une liste de redondance pour changer de maître automatiquement ;; Si le serveur esclave cesse de fonctionner, l'ensemble des requêtes devront être envoyées au serveur maître ;; Si l'architecture comporte plus de deux noeuds, et dans le cas où un serveur intermédiaire à la chaîne (qui est esclave et à la fois maître) tombe en panne, le serveur esclave devra être reconfiguré pour se répliquer sur le serveur maître du serveur tombé en panne.
Dans la plupart des cas, il faudra une action de l'administrateur pour rétablir l'ordre, et l'application cessera de fonctionner durant ce laps de temps. L'intérêt de cette solution apparaît alors dans la gestion des sauvegardes, car l'application n'utilisant que le serveur maître, elle ne sera pas stoppée si le serveur esclave de sauvegardes tombe en panne, mais une sauvegarde de la base sera disponible dans le cas où le serveur maître tombe en panne.
Si l'on souhaite rajouter un noeud, il faut le placer au bout de la chaîne en tant qu'esclave et modifier l'application pour gérer ce nouveau noeud.
Du point de vue de MySQL, chaque noeud est géré indépendamment, c'est donc au programmeur de devoir gérer la répartition de la charge.

Extension memcached permettant accès NoSQL aux données du moteur InnoDB
L'interface "memcached" est une extension à MySQL depuis la version 5.6 se présentant sous la forme d'un service résident exécuté sur le serveur et permettant de mettre en mémoire cache des données stockées par le moteur InnoDB. L'intérêt est un gain de performance (les données sont en cache mémoire) et la possibilité d'accéder à et de modifier une donnée via une interface du style NoSQL (accès à la donnée par une syntaxe du style @@get key), permettant d'éviter le temps d'interprétation de la requête par le parseur de requête.

MySQL Cluster
MySQL est capable, depuis la version 4.1 et grâce au moteur de stockage NDB, de gérer une grappe de serveurs complète. Sa structure repose sur la duplication des données, c'est-à-dire que chaque noeud fera partie d'un groupe de noeuds qui posséderont tous la totalité de la base.
Un protocole mis en place dans chaque noeud s'occupe d'adresser chaque transaction aux différents noeuds concernés dans la grappe, il faut un minimum de deux machines pour établir une solution de clustering MySQL et une machine (qui peut elle-même intégrer un serveur MySQL) qui va jouer le rôle de répartiteur de charge en redirigeant les requêtes sur les noeuds disponibles et les moins occupés.
Les requêtes de recherches (SELECT) seront plus rapides, mais lors d'une modification des données (une requête UPDATE, DELETE ou INSERT par exemple), celle-ci sera effectuée sur l'ensemble des noeuds, ce qui bloquera l'ensemble de la grappe pendant cette opération.
Par rapport à un système de réplication, la redondance est améliorée : si un noeud tombe en panne, sa charge est automatiquement reprise par les autres noeuds.
L'ajout d'un nouveau noeud peut se faire sans avoir besoin de repartitionner la base, il suffit de le faire reconnaître par la grappe et le redémarrage d'un noeud peut se faire sans avoir à redémarrer la grappe.
Du point de vue de MySQL, chaque noeud fait partie d'un ensemble qui pourrait être reconnu comme une seule machine. Pour le programmeur, il doit programmer son application pour communiquer avec le répartiteur de charge.
Cette solution s'adapte parfaitement lorsque la disponibilité et la sécurité des données est un problème critique et que l'on recherche un partitionnement technique pour l'écriture. Couplé à des fonctionnalités temps réel et à une API de programmation asynchrone NDB Cluster s'adresse principalement aux exigences du marché des télécommunications.

Voir aussi

Articles connexes: SQL, le langage de requêtes; MariaDB, un fork libre de MySQL; PostgreSQL, un autre SGBD libre; WAMP, LAMP, MAMP ensemble de logiciels (Apache, MySQL, PHP, PhpMyAdmin) permettant une mise en oeuvre rapide d'un site web respectivement sous Windows, Linux, Macintosh;. Outils de gestion, d'administration et de conception pour MySQL: phpMyAdmin, outil de gestion de bases de données MySQL écrit en PHP; Adminer, un autre outil de gestion lui aussi écrit en PHP; MySQL administrator, logiciel d'administration de bases de données; MySQL Workbench (versions MySQL 4) et anciennement DBDesigner (versions 3 et 4), système de conception de base de données sous forme graphique qui intègre tous les niveaux de conception, de modification, de création et de maintenance sur la structure d'une base de données; MySQL-Front, outil d'administration de base de données MySQL; SQL Buddy; DaDaBIK Database Interface Kreator.