Fortran (FORmula TRANslator) est un langage de programmation utilisé principalement pour le calcul scientifique. Inventé en 1954, c'est le plus ancien langage de programmation de haut niveau, suivi notamment par Lisp (1958), Algol (1958) et COBOL (1959). Le nombre de bibliothèques scientifiques écrites en Fortran et les efforts continus consacrés aux compilateurs pour exploiter au fil des décennies les nouvelles possibilités des calculateurs (vectorisation, coprocesseurs, parallélisme) ont maintenu l'usage de ce langage, non sans d'importantes évolutions.

Historique
John Backus, ingénieur en radiophonie recruté quatre ans plus tôt par IBM, publie en 1954 un article intitulé Preliminary Report, Specifications for the IBM Mathematical FORmula TRANslating System, FORTRAN. Il faut ensuite deux ans d'efforts à l'équipe qu'il dirige au sein d'IBM pour écrire le premier compilateur Fortran (25 000 lignes, pour l'IBM 704)
Le nom du langage est parfois écrit conventionnellement en majuscules (FORTRAN) pour désigner les versions du langage jusqu'au Fortran 77, par opposition aux versions à syntaxe libre, depuis Fortran 90. Par ailleurs, dans le standard Fortran 77, les lettres minuscules ne font pas partie du langage, même si la plupart des compilateurs les prennent en charge, en extension au standard.
Aujourd'hui encore (années 2010), le langage Fortran reste très utilisé pour plusieurs raisons : la présence de très nombreuses bibliothèques de fonctions, mises au point et améliorées durant de nombreuses années ;; l'existence de logiciels en Fortran ayant demandé des ressources très importantes pour leur développement, et dont le passage à un autre langage est jugé trop coûteux ;; l'existence de compilateurs performants qui produisent des exécutables très rapides ;.
Toutefois, beaucoup de programmes scientifiques sont à présent écrits en C et C++, dont les compilateurs sont disponibles sur la plupart des machines. D'autres langages compilés sont parfois utilisés pour le calcul scientifique, et surtout des logiciels tels que Scilab ou Matlab. Ces derniers incorporent d'ailleurs les bibliothèques BLAS et LAPACK, développées en Fortran. Matlab était à l'origine un programme en Fortran, distribué aux universités et aux centres de recherche. Par ailleurs, des langages de programmation sont en cours de développement, pour faciliter la programmation parallèle sur les superordinateurs, un domaine où Fortran est très utilisé. On peut citer X10, développé par IBM depuis 2004, et Chapel (en), développé par Cray depuis 2009. Un autre langage, Fortress, apparu en 2006 et développé par Sun Microsystems, a été abandonné en 2012. Ces trois langages font partie du projet High Productivity Computing Systems (en) de la DARPA.
Le Fortran, créé à l'époque des cartes perforées (en particulier avec le système FMS), optimise la mise en page de ses sources dans cette optique, jusqu'au Fortran 90 qui introduit une syntaxe "libre". Avant Fortran 90, le code commence à partir de la 7e colonne et ne doit pas dépasser la 72e. Il se présente alors ainsi : La colonne 1 peut contenir la lettre C indiquant un commentaire. Le caractère - est aussi accepté ;; Les colonnes 1 à 5 peuvent contenir une étiquette numérique (facultative) de l'instruction, dont la valeur peut être limitée à 32 767 ou 9 999 suivant le compilateur (en Fortran II des ordinateurs Advanced Scientific Instruments ASI 210 et ASI 2100) ;; La colonne 6 indique une suite de l'instruction précédente ;; Les colonnes 73 à 80 servent à l'identification et la numérotation des cartes perforées (souvent les trois initiales du projet, du chef de projet ou du programmeur, suivies de numéros de cinq chiffres attribués de dix en dix pour permettre des insertions de dernière minute).
Également, avant Fortran 90, les espaces n'ont pas de signification entre la 7e et la 72e colonne. Ainsi, la boucle DO 10 I-1,5 peut aussi s'écrire DO10I-1,5. En revanche, DO 10 I-1.5 est équivalent à DO10I-1.5, affectation de la valeur 1.5 à la variable DO10I. Le 10 représente ici le label de fin de boucle, obligatoire avant Fortran 90 : ce dernier a introduit le END DO, qui était déjà pris en charge par de nombreux compilateurs sous forme d'extension au standard Fortran 77. L'extension MIL-STD-1753 du département de la Défense américain avait déjà introduit ce END DO en Fortran 77 (à la place d'une instruction ou de CONTINUE), dès 1978, mais le label restait obligatoire.
De nombreux codes industriels ont été écrits en Fortran (Nastran, bibliothèques NAG et IMSL, etc.) et la compatibilité des nouvelles versions avec les précédentes est indispensable, au prix de conserver des notions qui ne s'imposent plus. Pour cette raison, Fortran 90 est complètement compatible avec Fortran 77. Les versions suivantes du standard ont cependant introduit des incompatibilités.
Le langage BASIC, dans sa version originale (1964), a été conçu comme un petit langage à caractère pédagogique permettant d'initier les étudiants à la programmation, avant de passer aux langages "sérieux" de l'époque : Fortran et Algol. On y retrouve donc quelques traits du langage Fortran.
Logiciel en Fortran 77 avec sortie du compilateur (ordinateur : CDC 175 de l'Université technique de Rhénanie-Westphalie à Aix-la-Chapelle).
Compilateurs
Le compilateur libre GCC permet de compiler le Fortran 77 (compilateur g77, jusqu'à gcc 3.4.6). Le compilateur gfortran apparaît avec GCC 4.0.0, en 2005. Il est issu d'un fork réalisé en 2003 de G95 (en), un autre compilateur libre, dont le développement a débuté en 2000. Le développement de G95 est arrêté depuis janvier 2013 (date de la dernière mise à disposition du code source). En 2013, gfortran prend pleinement en charge le standard Fortran 95, et une partie de Fortran 2003 et Fortran 2008. Il n'a d'ailleurs pas à rougir devant les compilateurs commerciaux, pour le support de ces deux "nouveaux" standards, les fabricants étant parfois plus intéressés par l'amélioration de la vitesse du code produit que par les dernières fonctionnalités offertes par le standard.
Open64 (en) est un autre compilateur libre de Fortran 95, à ne pas confondre avec AMD x86 Open64, lui aussi libre. On trouve également le compilateur libre Open Watcom, mais il ne compile que du Fortran 77, et aucune évolution vers un standard plus récent n'est prévue.
On trouve de nombreux compilateurs commerciaux, parmi lesquels : Lahey, Absoft, PathScale (en), Portland Group (en) (filiale de NVidia), NAG, etc. La plupart des fabricants de stations de travail ou d'ordinateurs destinés au calcul intensif, proposent également un compilateur de Fortran : Intel, IBM, HP, SGI, Oracle (à la suite du rachat de Sun Microsystems), Unisys, Cray, etc. Cela comprend aussi les fabricants aujourd'hui disparus, tels que CDC ou DEC. Ce dernier a d'ailleurs été racheté par Compaq, qui a plus tard fusionné avec HP ; le compilateur Intel Visual Fortran est le successeur de DEC Visual Fortran puis Compaq Visual Fortran.
Certains de ces compilateurs commerciaux ont des versions gratuites pour une utilisation non commerciale : c'est le cas d'Intel, Oracle, PathScale, Portland Group.

Exemple
PROGRAM DEGRAD
!
! Imprime une table de conversion degrés - radians
! -------------------------------------------------
!
! Déclaration des variables
 INTEGER DEG
 REAL RAD, COEFF
!
! En-tête de programme
 WRITE (-, 10)
 10 FORMAT (' ',20('-') -
 et ' - Degres - Radians -' -
 et ' ', 20('-'))
!
! Corps de programme
 COEFF - (2.0 - 3.1416) - 360.0
 DO DEG - 0, 90
 RAD - DEG - COEFF
 WRITE (-, 20) DEG, RAD
 20 FORMAT (' - ',I4,' - ',F7.5,' -')
 END DO
!
! Fin du tableau
 WRITE (-, 30)
 30 FORMAT (' ',20('-'))
!
! Fin de programme
 STOP
 END PROGRAM DEGRAD
Notes : Ce programme est écrit en Fortran 90, en "forme fixe" et dans un style favorisant la compatibilité avec Fortran 77.; Le symbole "!" indique un commentaire. Il peut être remplacé par les caractères "C" ou "-" lorsqu'il sont utilisés comme premier caractère.; La déclaration des variables est facultative en Fortran, mais sans déclaration, la variable DEG serait alors de type REAL (les variables dont le nom commence par une des lettres I, J, K, L, M ou N sont par défaut de type INTEGER, les autres de type REAL).; L'instruction WRITE se réfère à une unité d'entrée-sortie (ici - désigne le terminal) et une spécification de format. Par exemple le format d'étiquette 20 indique qu'il faut écrire une espace, une étoile et deux espaces, un entier (la valeur de DEG) sur 4 caractères, puis deux espaces, une étoile, une espace, puis la valeur de RAD sur 7 caractères dont 5 après le point décimal et enfin une espace et une étoile. Une déclaration de FORMAT peut être n'importe où ; une habitude est de la mettre juste après le WRITE à laquelle elle se réfère, une autre est de les mettre toutes à la fin de l'unité de programme. Plus d'une instruction WRITE peut faire référence à un même FORMAT.; Le caractère et à la fin d'une ligne indique une suite à la ligne suivante et le caractère et au début de la ligne indique la suite de la ligne précédente. Le deuxième est facultatif en Fortran 90, mais facilite la compatibilité avec Fortran 77 (une continuation de ligne y est indiquée par un caractère quelconque en colonne 6 des lignes suivant la première). C'est aussi pour faciliter la compatibilité que le et de la première ligne est placé après la colonne 72 : ainsi il n'est pas pris en compte par un compilateur de Fortran 77.; L'instruction "DO DEG - 0,90" indique de répéter en boucle les instructions qui suivent (jusqu'au END DO) pour toutes les valeurs de DEG de 0 à 90 par pas de 1.

Versions de Fortran
Le langage Fortran a connu de nombreuses évolutions : 1956. Fortran I n'avait que des expressions arithmétiques et donc logiquement le branchement conditionnel était le "IF-arithmétique" à trois adresses : IF (A-B) 10, 20, 30 indiquait de sauter aux instructions d'étiquette 10, 20 ou 30 selon que A-B était négatif, nul ou positif.; 1958. Fortran II apportait les fonctions FUNCTION et les sous-programmes SUBROUTINE que l'on appelle par l'instruction CALL.; 1959. Fortran III permettait d'y insérer du langage assembleur symbolique, mais n'est jamais sorti sous forme de produit.; 1962. Fortran IV introduit, entre autres, l'instruction "IF-logique", permettant d'écrire IF (A.GE. B) GOTO 10 (aller à 10 si A est supérieur ou égal à B).; 1964. Fortran V était le nom envisagé au départ pour PL-I, langage de programmation universel d'IBM qui devait réunir les meilleurs aspects de Fortran (pour les applications scientifiques), de COBOL (pour les applications de gestion), avec quelques emprunts à Algol.; 1965. Le standard ECMA Fortran, situé à cheval entre le "Basic Fortran" et le "Fortran USASI"; 1966. Fortran 66 (USASI X3.9-1966) est la première version officiellement standardisée (par l'American Standards Association) de Fortran. On la confond souvent avec Fortran IV.; 1978. Fortran 77 (ANSI X3.9-1978), entre autres améliorations, facilite la programmation structurée avec des blocs IF - THEN - ELSE - END IF. En 1978, une extension introduit entre autres DO WHILE - END DO.; 1991. Fortran 90 (ISO-IEC 1539:1991, puis ANSI X3.198-1992) : modules, récursivité, surcharge des opérateurs, nouveaux types de données, etc. C'est une mise à jour importante pour mettre Fortran au niveau des autres langages modernes. Les restrictions concernant la mise en forme des programmes (colonnes 1 à 72) disparaissent : l'écriture se fait en format libre.; 1992 IEEE 1003.9-1992, volet Fortran 77 du standard POSIX.; 1994 ISO-IEC 1539-2:1994, qui définit des chaînes de caractères de longueur variable. Ce standard a été révisé en 2000; 1997. Fortran 95 (ISO-CEI 1539-1:1997); 1999 ISO-IEC 1539-3:1999, qui définit des directives de compilation conditionnelle. Ce standard a été abandonné en 2011.; 2004. Fortran 2003 (ISO-CEI 1539-1:2004) : comme le COBOL 2002, Fortran supporte maintenant la programmation orientée objet. L'interface avec le langage C est assurée par le module interne ISO-C-BINDING et les mots-clés BIND et VALUE, qui permettent à un programme Fortran d'accéder facilement aux bibliothèques disponibles en C.; 2010. Fortran 2008 (ISO-CEI 1539-1:2010).; La prochaine version, connue sous le nom "Fortran 2015", apportera des modifications mineures au langage. La publication de la norme est prévue en août 2018. Le travail technique sur la norme est à présent terminé, et le comité est en phase de relecture.; Alors que la norme Fortran 2015 est en cours de finalisation, le planning pour la version suivante, informellement dénommée Fortran 2020, a démarré en juin 2017. La publication du committee draft est envisagée en juillet 2021.

Bibliothèques

Bibliothèques graphiques
Les normes Fortran n'incluent pas d'instructions graphiques. Pour pallier ce manque, il faut utiliser des bibliothèques : gtk-fortran : interface GTK+ 2 et 3 - Fortran, entièrement écrite en Fortran 2003 standard grâce au module ISO-C-BINDING. Multiplateforme (Linux, Windows, Mac OS X...) Projet lancé en janvier 2011. Logiciel libre sous licence GPL 3.; pilib (Platform Independent Library for Fortran) : interface Fortran 90-95 - GTK. Développement arrêté. Logiciel libre.; Quickwin : bibliothèque graphique fournie avec le Compaq Visual Fortran (désormais Intel Visual Fortran). Ne fonctionne que sous Windows.; Winteracter : interface graphique et outils de visualisation. Logiciel commercial pour Windows, Linux et MacOS X.; SansGUI : interface commerciale pour Windows et Compaq Visual Fortran.; DISLIN : bibliothèque graphique créée par le Max Planck Institute for Solar System Research. Multiplate-formes (UNIX, Linux, FreeBSD, OpenVMS, Windows et MS-DOS). Fonctionne avec de nombreux compilateurs. Gratuit pour un usage non-commercial.; JAPI (Java Application Programming Interface) : interface Java-Fortran permettant de créer une interface graphique complète pour les programmes Fortran. Multiplate-formes (Windows, Linux, Solaris). Fonctionne avec de nombreux compilateurs (entre autres gfortran, Compaq Visual Fortran...) Logiciel libre sous licence LGPL.; Ftcl : interface Fortran-Tcl-TK. Gratuit, open-source.; f90gl : interface du Fortran 90 avec OpenGL, GLU et GLUT. Multiplate-formes. Fonctionne avec de nombreux compilateurs. Licence : domaine public.; GrWin Graphics Library : logiciel libre pour Windows.; Xeffort : bibliothèque graphique pour Visual Fortran. logiciel libre pour Windows.; g2 graphical library : pour Linux, AIX, Digital Unix, SunOS, IRIX, OpenVMS, Windows. Logiciel libre sous licence LGPL.; PLplot : bibliothèque pour tracer des courbes scientifiques. Multiplate-formes (Linux, OpenSolaris, Unix, MS-DOS, Windows, Mac OS X). Logiciel libre sous licence LGPL.; PGPLOT : bibliothèque de routines graphiques, interactive, gratuite, multiplate-forme, gère beaucoup de périphériques de sortie.; PSPLOT : générer des dessins en PostScript.

Bibliothèques de calcul scientifique: Linear Algebra Package alias LAPACK; Basic Linear Algebra Subprograms (BLAS); Physics Analysis Workstation (PAW); IMSL (International Mathematics and Statistics Library) Fortran Library (commerciale).

Voir aussi

Articles connexes: Fortran 90; Fortran 95; Netlib.